<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Living life and make it better]]></title>
  <link href="http://software.endy.muhardin.com/atom.xml" rel="self"/>
  <link href="http://software.endy.muhardin.com/"/>
  <updated>2014-12-16T15:38:28+07:00</updated>
  <id>http://software.endy.muhardin.com/</id>
  <author>
    <name><![CDATA[Endy Muhardin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mengapa kita membuat class]]></title>
    <link href="http://software.endy.muhardin.com/java/mengapa-kita-membuat-class/"/>
    <updated>2014-12-16T15:26:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/mengapa-kita-membuat-class</id>
    
    
        <summary type="html"><![CDATA[<p>Ada pertanyaan di <a href="https://www.facebook.com/groups/ForumJavaIndonesia/">grup Facebook</a> yang cukup menarik untuk kita bahas di sini. Sample code yang ditanyakan saya modifikasi sedikit supaya lebih cocok.</p>

<h2>Class Mahasiswa</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Mahasiswa</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">nama</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Date</span> <span class="n">tanggalLahir</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">JenisKelamin</span> <span class="n">jenisKelamin</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// getter setter</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">enum</span> <span class="n">JenisKelamin</span><span class="o">{</span>
</span><span class='line'>    <span class="n">PRIA</span><span class="o">,</span> <span class="n">WANITA</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Class SimpanMahasiswaServlet</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpanMahasiswaServlet</span> <span class="kd">extends</span> <span class="n">HttpServlet</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">MahasiswaDao</span> <span class="n">md</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MahasiswaDao</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">){</span>
</span><span class='line'>        <span class="n">Mahasiswa</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mahasiswa</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">m</span><span class="o">.</span><span class="na">setNama</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;nama&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">SimpleDateFormat</span> <span class="n">formatTanggal</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">m</span><span class="o">.</span><span class="na">setTanggalLahir</span><span class="o">(</span><span class="n">formatTanggal</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;tanggal&quot;</span><span class="o">)));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">m</span><span class="o">.</span><span class="na">setJenisKelamin</span><span class="o">(</span><span class="n">JenisKelamin</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;jenis&quot;</span><span class="o">)));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">md</span><span class="o">.</span><span class="na">simpan</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Class MahasiswaDao</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MahasiswaDao</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">simpan</span><span class="o">(</span><span class="n">Mahasiswa</span> <span class="n">m</span><span class="o">){</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">&quot;INSERT INTO mahasiswa values (?,?,?)&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">PreparedStatement</span> <span class="n">ps</span> <span class="o">=</span> <span class="n">koneksi</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
</span><span class='line'>        <span class="n">ps</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="n">m</span><span class="o">.</span><span class="na">getNama</span><span class="o">());</span>
</span><span class='line'>        <span class="n">ps</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="mi">2</span><span class="o">,</span> <span class="k">new</span> <span class="n">java</span><span class="o">.</span><span class="na">sql</span><span class="o">.</span><span class="na">Date</span><span class="o">(</span><span class="n">m</span><span class="o">.</span><span class="na">getTanggalLahir</span><span class="o">().</span><span class="na">getTime</span><span class="o">()));</span>
</span><span class='line'>        <span class="n">ps</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="mi">3</span><span class="o">,</span> <span class="n">m</span><span class="o">.</span><span class="na">getJenisKelamin</span><span class="o">().</span><span class="na">name</span><span class="o">());</span>
</span><span class='line'>        <span class="n">ps</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Pertanyaan : Lebih kenceng mana contoh kode di atas (menggunakan class Mahasiswa) dibandingkan langsung saja pakai Map/Array ?</p></blockquote>

<p>Supaya lebih jelas, berikut contoh yang pakai array.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpanMahasiswaServlet</span> <span class="kd">extends</span> <span class="n">HttpServlet</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="n">MahasiswaDao</span> <span class="n">md</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MahasiswaDao</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doPost</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">){</span>
</span><span class='line'>        <span class="n">String</span><span class="o">[]</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="n">String</span><span class="o">[</span><span class="mi">3</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">m</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;nama&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">m</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;tanggal&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">m</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;jenis&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">md</span><span class="o">.</span><span class="na">simpan</span><span class="o">(</span><span class="n">m</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Class MahasiswaDao</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MahasiswaDao</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">simpan</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">m</span><span class="o">){</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">sql</span> <span class="o">=</span> <span class="s">&quot;INSERT INTO mahasiswa values (?,?,?)&quot;</span><span class="o">;</span>
</span><span class='line'>        <span class="n">PreparedStatement</span> <span class="n">ps</span> <span class="o">=</span> <span class="n">koneksi</span><span class="o">.</span><span class="na">prepareStatement</span><span class="o">(</span><span class="n">sql</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">m</span><span class="o">++){</span>
</span><span class='line'>            <span class="n">ps</span><span class="o">.</span><span class="na">setString</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">m</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">ps</span><span class="o">.</span><span class="na">executeUpdate</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pembuatan class <code>Mahasiswa</code> di atas merupakan salah satu implementasi prinsip <code>encapsulation</code> dalam OOP. Class <code>Mahasiswa</code> disebut dengan istilah domain class, yaitu class yang dibuat untuk memodelkan kasus yang akan dibuat.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pembagian Kerja dalam Programming]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/pembagian-kerja-dalam-programming/"/>
    <updated>2014-10-25T09:25:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/pembagian-kerja-dalam-programming</id>
    
    
        <summary type="html"><![CDATA[<p>Ada pertanyaan bagus di Forum Java Programmer Indonesia di Facebook</p>

<p><img src="https://lh6.googleusercontent.com/-WwcyvgyzpyI/VEsOaOMQ3pI/AAAAAAAAG9Q/z_KHGG79bUY/w560-h174-no/Selection_023.png"></p>

<blockquote><p>Bagaimana cara pembagian tugas kalau mengerjakan aplikasi dengan tim?</p></blockquote>

<p>Berikut pendekatan yang biasa saya gunakan</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Waterfall is The Best]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/waterfall-is-the-best/"/>
    <updated>2014-10-14T20:45:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/waterfall-is-the-best</id>
    
    
        <summary type="html"><![CDATA[<p>Di berbagai komunitas Agile, metodologi waterfall merupakan bulan-bulanan dan wajib untuk dibully. Jangankan bilang waterfall itu bagus, coba katakan <code>Ada beberapa situasi di mana waterfall bisa dijalankan</code>. Saya jamin 1000% Anda akan segera dibully seperti layaknya pendukung Justin Bieber hadir di konser Metallica.</p>

<p>Kalau ada satu hal penting yang saya dapatkan dari belasan tahun berkecimpung di dunia IT adalah ini</p>

<blockquote><p>Banyak jargon, metodologi, framework, library, teknologi datang dan pergi setiap saat. Untuk tiap pilihan yang kita buat, ada biaya yang menyertainya. Yaitu waktu dan tenaga yang kita investasikan untuk mempelajari dan mengadopsi pilihan tersebut. Kunci agar kita bisa memilih hal yang tepat sehingga imbal hasil pilihan kita lebih besar dari biayanya adalah, gunakan akal sehat dan jangan gampang terbuai jargon dan marketing gimmick.</p></blockquote>

<p>Prinsip akal sehat tersebut telah menyelamatkan saya dari berbagai teknologi gagal di masa lalu seperti misalnya:</p>

<ul>
<li>Struts 1</li>
<li>EJB 1 dan 2</li>
<li>XA Transaction</li>
<li>JMS</li>
<li>dan lain sebagainya</li>
</ul>


<p>Teknologi gagal bukan artinya teknologi tersebut tidak inovatif atau kurang canggih. Tapi biaya implementasinya jauh melebihi benefit yang diperoleh darinya.</p>

<p>Nah, kali ini dimana orang-orang &#8216;agile&#8217; sibuk membully Waterfall, saya punya pendapat yang berbeda.</p>

<blockquote><p>Waterfall justru adalah cara paling alami untuk membuat software</p></blockquote>

<p>Wah kok bisa begitu?</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips Meletakkan File Konfigurasi Aplikasi]]></title>
    <link href="http://software.endy.muhardin.com/java/tips-meletakkan-file-konfigurasi-aplikasi/"/>
    <updated>2014-09-08T14:00:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/tips-meletakkan-file-konfigurasi-aplikasi</id>
    
    
        <summary type="html"><![CDATA[<p>Dalam membuat aplikasi, biasanya ada nilai variabel yang ingin kita simpan di file konfigurasi, supaya pada saat isinya berubah tidak perlu melakukan kompilasi ulang. Misalnya konfigurasi koneksi database. Alamat database server, username, dan password biasanya sering berubah, tergantung tempat di mana aplikasi dideploy.</p>

<p>Ada beberapa hal yang biasanya menjadi pertanyaan, yaitu:</p>

<ol>
<li>Di mana sebaiknya kita menyimpan file tersebut?</li>
<li>Bagaimana caranya supaya aplikasi kita portable? Portable artinya bisa dicopy paste ke berbagai komputer dengan lokasi folder berbeda-beda.</li>
<li>Bagaimana cara membaca file konfigurasi tersebut?</li>
</ol>


<p>Pertanyaan ini diajukan salah satu member di grup <a href="https://www.facebook.com/groups/netbeans.id/?fref=nf">Netbeans Indonesia</a></p>

<p>Berikut screenshot kode program yang sudah dia buat</p>

<p><img src="https://lh4.googleusercontent.com/-5j9PxOw3oUM/VA1UZR2oPRI/AAAAAAAAGpM/FxnUMInN8ME/w660-h312-no/error-load-file.jpg"></p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tanya Judul Skripsi]]></title>
    <link href="http://software.endy.muhardin.com/akademik/tanya-judul-skripsi/"/>
    <updated>2014-09-06T22:05:00+07:00</updated>
    <id>http://software.endy.muhardin.com/akademik/tanya-judul-skripsi</id>
    
    
        <summary type="html"><![CDATA[<p>Salah satu pertanyaan yang sering saya temui di berbagai forum pemrograman adalah</p>

<blockquote><p>Saya mahasiswa jurusan Teknik Informatika semester akhir.
Kira-kira judul skripsi yang bagus apa ya?</p></blockquote>

<p>Berikut jawaban saya &#8230;</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Belajar Project Management dari Ubuntu]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/belajar-project-management-dari-ubuntu/"/>
    <updated>2014-08-30T23:49:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/belajar-project-management-dari-ubuntu</id>
    
    
        <summary type="html"><![CDATA[<p>Hampir seluruh aktivitas yang saya lakukan dengan komputer (smartphone juga termasuk komputer) menggunakan aplikasi open source. Jaman sekarang, aplikasi open source sudah jauh mengungguli aplikasi closed source baik dalam hal fitur, user-friendliness, reliability, dan kecepatan development (bug fix, fitur baru, enhancement, dan sebagainya).</p>

<p>Selama ini kita hanya tahu pakai saja. Download, instal, pakai, happy. Kita juga hanya tahu bahwa open source = kode programnya bisa dilihat, dimodifikasi, dan dibagikan ke siapa saja. Sebenarnya ada aspek lain dari open source yang juga menarik, penting, dan banyak sekali manfaatnya buat para pembaca blog saya yang utamanya adalah programmer, software project manager, dan juga pengusaha di sektor IT. Aspek tersebut adalah software development process yang terjadi sehingga semua produk canggih ini bisa berada di tangan kita saat ini.</p>

<p>Kehandalan manajemen proyek open source bisa kita lihat bukti nyatanya di distro linux Ubuntu. Coba lihat beberapa fakta berikut:</p>

<ul>
<li>Ubuntu rilis setiap enam bulan sekali, yaitu tiap bulan April dan Oktober.</li>
<li>Sejak rilis pertama, belum pernah terjadi keterlambatan rilis.</li>
<li>Kontributor Ubuntu (programmer, pembuat dokumentasi, desain tampilan, tukang burn CD, tukang update website, tukang upload iso, admin server, dsb) datang dari seluruh dunia. Bekerja 24 jam sehari 7 hari seminggu dengan timezone yang berbeda-beda. Jadi kalau kita masih kerja di ruangan yang sama, hanya dipisahkan <em>cubicle</em> saja, datang bareng, makan siang bareng, pulang bareng, sebaiknya jangan terlalu sering mengeluh di socmed ;p</li>
<li>Jumlah kontributornya ribuan orang. Bahasanya berbeda-beda. Lokasinya juga berbeda-beda.</li>
<li>Tulang punggung Ubuntu adalah kernel Linux dan desktop manager Gnome. Harus menunggu Gnome rilis dulu, baru Ubuntu bisa dikerjakan. Jangan sampai di tengah-tengah development Ubuntu, ada perubahan signifikan yang terjadi di Gnome sehingga Ubuntu harus rombak total.</li>
<li>Ubuntu basisnya adalah distro Debian varian unstable. Proses development harus memperhatikan agar jangan sampai menyimpang terlalu jauh dari Debian supaya tetap bisa sinkronisasi pada saat Debian naik versi.</li>
<li>Ubuntu digunakan orang dari seluruh dunia, sehingga harus bisa mendukung berbagai bahasa, format angka, format tanggal, dan berbagai variasi lainnya.</li>
<li><a href="http://software.endy.muhardin.com/manajemen/release-management/">Kompatibilitas antar rilis</a> harus terjaga, supaya orang bisa <a href="http://software.endy.muhardin.com/linux/upgrade-ubuntu/">upgrade dengan mudah</a>.</li>
</ul>


<blockquote><p>Nah, apa rahasianya supaya bisa seperti itu?</p></blockquote>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Capacity Planning]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/capacity-planning/"/>
    <updated>2014-08-19T17:48:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/capacity-planning</id>
    
    
        <summary type="html"><![CDATA[<p>Ada pertanyaan bagus di milis IT Project Management, sebagai berikut</p>

<blockquote><p>Mohon di-share caranya menentukan spesifikasi minimal hardware yang dibutuhkan sebuah sistem.
contoh <a href="http://en.wikipedia.org/wiki/System_requirements">http://en.wikipedia.org/wiki/System_requirements</a>
Kriteria apa saja yang digunakan dalam memilih hardware? Terutama menentukan jumlah RAM dan Speed Processor nya. Apakah cukup dari jumlah concurrent user? Atau menggunakan metode trial-and-error.
Kalaupun trial-and-error, tentunya ada standar yang digunakan sebagai benchmark awal ya kan? Bagaimana standar awal tersebut?</p></blockquote>

<p>Mari kita bahas</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Memahami Authentication]]></title>
    <link href="http://software.endy.muhardin.com/java/memahami-authentication/"/>
    <updated>2014-07-26T23:49:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/memahami-authentication</id>
    
    
        <summary type="html"><![CDATA[<p>Menjelang penghujung bulan Ramadhan, ada yang <a href="https://groups.yahoo.com/neo/groups/jug-indonesia/conversations/messages/92685">bertanya di milis JUG</a>. Alhamdulillah, ada kesempatan bersedekah di detik-detik terakhir bulan puasa ;) Karena pertanyaannya membutuhkan jawaban yang cukup panjang, baiklah kita jawab di blog saja.</p>

<p>Berikut pertanyaannya.</p>

<blockquote><p>Saya pernah menggunakan Spring Security Framework. Tapi kalau cuma pakai, tanpa ngerti konsep dasar dan cara kerjanya dasarnya sakit kepala juga akhirnya kalau semua terjadi secara automagically.</p>

<p>Jadi kalau murni tanpa menggunakan Framework apapun :</p>

<ul>
<li>Bagaimana membuat proses loginnya? dari beberapa artikel yang saya baca (saya baru tahu) katanya login username dan passwordnya dimasukan kedalam HTTP Header.</li>
</ul>


<p>Contohnya :</p>

<p><code>Authorization:Basic c2VzdWF0dUB5YWhvby5jb206YmlzbWlsbGFo</code></p>

<p>dimana <code>c2VzdWF0dUB5YWhvby5jb206YmlzbWlsbGFo</code> adalah Base64 encoding dari <code>sesuatu@yahoo.com:bismillah</code> (username:password)</p>

<p>benarkah begitu?</p>

<ul>
<li><p>Bagaimana server mengenali client jika kita menggunakan method GET? (ini pertanyaan konsep sangat mendasar sekali). Mungkin jawabannya ya dengan token.</p></li>
<li><p>Tapi ditaruh dimana? apakah dengan saya tempelkan saja di URL? misal</p></li>
</ul>


<p><code>GET /thewebapp/category/324?token=abcde1234</code></p>

<p>atau saya masukkan dalam HTTP header? tapi dengan header apa?</p></blockquote>

<p>Dan berikut jawaban saya</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Desain Skema Database]]></title>
    <link href="http://software.endy.muhardin.com/java/desain-skema-database/"/>
    <updated>2014-05-06T10:42:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/desain-skema-database</id>
    
    
        <summary type="html"><![CDATA[<p>Pada <a href="http://software.endy.muhardin.com/manajemen/tahapan-membuat-aplikasi/">artikel sebelumnya</a>, kita telah belajar bagaimana memulai membuat aplikasi, yaitu dengan cara:</p>

<ul>
<li>membuat daftar fitur</li>
<li>membuat UI Mockup</li>
</ul>


<p>Kedua langkah di atas membantu kita untuk memvisualisasikan apa yang ada di imajinasi kita menjadi bentuk yang bisa dilihat oleh banyak orang. Ada beberapa keuntungan dari proses visualisasi ini, yaitu:</p>

<ul>
<li>mengurangi kepusingan, karena apa yang sebelumnya cuma dibayangkan, sekarang terlihat bentuknya</li>
<li>menunjukkan kekurangan dalam imajinasi kita. Seringkali saya mendapati ada informasi yang kurang sehingga harus ditanyakan lagi ke user. Kali lain, saya mendapati ternyata perpindahan antar screen tidak sistematis sehingga membingungkan user. Atau saya terlalu kompleks mendesain tampilan yang seharusnya bisa lebih sederhana.</li>
<li>menjadi bahan diskusi dengan user, menghindarkan kita dari membuat sesuatu yang tidak dibutuhkan user.</li>
<li>sebagai pedoman kita untuk merancang skema database</li>
</ul>


<p>Poin terakhir tersebut akan menjadi bahasan kita pada artikel kali ini.</p>

<p>Saya tidak akan membahas tentang teori normal form. Seharusnya para mahasiswa informatika sudah mempelajarinya di mata kuliah Basis Data yang biasanya diberikan di semester 3. Silahkan ambil lagi mata kuliah tersebut di tahun/semester depan kalau ternyata Anda ketiduran waktu dosennya menerangkan. Sedangkan pembaca yang tidak kuliah di informatika (seperti saya), bisa baca-baca <a href="http://en.wikipedia.org/wiki/Database_normalization">referensi dari Wikipedia</a> atau <a href="http://www.bkent.net/Doc/simple5.htm">tutorial di sini</a>.</p>

<p>Artikel ini ditulis dengan asumsi pembaca sudah paham apa itu normal form. Silahkan belajar dulu kalau belum paham, baru kembali lagi ke sini.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tahapan Membuat Aplikasi]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/tahapan-membuat-aplikasi/"/>
    <updated>2014-04-22T23:51:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/tahapan-membuat-aplikasi</id>
    
    
        <summary type="html"><![CDATA[<p>Seperti sudah dijelaskan pada <a href="http://software.endy.muhardin.com/manajemen/aplikasi-prakarya-vs-aplikasi-production/">artikel sebelumnya</a>, anjuran saya buat mereka yang ingin mahir pemrograman adalah</p>

<blockquote><p>Buatlah aplikasi production barang 5-10 buah. Insya Allah setelah itu Anda akan mahir.</p></blockquote>

<p>Setelah kita menguasai dasar-dasar pemrograman seperti:</p>

<ul>
<li>konsep variabel dan tipe data</li>
<li>control flow (looping, branching, jumps)</li>
<li>pengelompokan (function, class, package)</li>
</ul>


<p>tidak serta merta kita bisa langsung membuat aplikasi. Analoginya, walaupun kita mahir menggunakan pengolah dokumen seperti MS Word atau Open Office, tidak berarti kita bisa menulis seri lanjutan dari <a href="http://en.wikipedia.org/wiki/Harry_Potter_and_the_Deathly_Hallows">Harry Potter and the Deathly Hallows</a>.</p>

<p>Inilah sebabnya banyak pemegang sertifikasi pemrograman seperti Oracle Certified Java Programmer yang tidak bisa membuat aplikasi, walaupun mendapatkan nilai yang tinggi.</p>

<p>Ada berbagai macam aplikasi, diantaranya:</p>

<ul>
<li>aplikasi bisnis, yaitu aplikasi yang membantu pencatatan kegiatan bisnis. Contohnya aplikasi akunting, purchasing, perpustakaan, mini-market, bank, payment gateway, dan sebagainya</li>
<li>aplikasi sistem, yaitu aplikasi yang memungkinkan berbagai perangkat bekerja sama. Contohnya sistem operasi, device driver, embedded system, dan lainnya</li>
<li>dan berbagai kategori aplikasi lainnya.</li>
</ul>


<p>Artikel kali ini akan kita batasi hanya untuk membahas aplikasi bisnis. Mengapa demikian? Karena aplikasi bisnis adalah genre aplikasi yang paling banyak dibuat orang. Sebagai ilustrasi, kita hanya mengenal beberapa sistem operasi populer, yaitu Microsoft Windows, Linux, MacOS. Bandingkan dengan aplikasi bisnis, untuk proses akuntansi saja berapa ribu aplikasi yang tersedia. Bahkan walaupun sudah ada yang gratis dan lengkap, tetap saja banyak perusahaan yang minta dibuatkan aplikasi sejenis. Jadi dari sisi komersial dan ketersediaan lapangan kerja, pembuatan aplikasi bisnis tetaplah pangsa pasar terbesar.</p>

<p>Pada artikel ini, kita akan membahas proses berpikir dan tahapan mulai dari penjabaran aplikasi yang akan dibuat, sampai menjadi skema database dan desain aplikasi berorientasi objek (object-oriented).</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aplikasi Prakarya vs Aplikasi Production]]></title>
    <link href="http://software.endy.muhardin.com/manajemen/aplikasi-prakarya-vs-aplikasi-production/"/>
    <updated>2014-04-15T22:00:00+07:00</updated>
    <id>http://software.endy.muhardin.com/manajemen/aplikasi-prakarya-vs-aplikasi-production</id>
    
    
        <summary type="html"><![CDATA[<p>Salah satu pertanyaan yang sering ditanyakan di forum programmer adalah</p>

<blockquote><p>Saya ingin belajar bahasa pemrograman [isi bahasa yang Anda sukai di sini], bagaimana ya caranya supaya bisa mahir?</p></blockquote>

<p>Dan jawaban saya selalu sama</p>

<blockquote><p>Coba buatlah aplikasi berkualitas production barang 5 - 10 kali, setelah itu insya Allah akan mahir.</p></blockquote>

<p>Jawaban di atas memang singkat, tapi jalan untuk menuju kesana <a href="http://endy.muhardin.com/education/tahapan-belajar/">sungguh tidak mudah dan tidak singkat</a>. Apalagi untuk pemula, setidaknya ada dua pertanyaan besar:</p>

<ol>
<li>Apa sih aplikasi production itu?</li>
<li>Bagaimana cara membuat aplikasi?</li>
</ol>


<p>Pertanyaan pertama akan kita jawab pada artikel ini. Sedangkan pertanyaan kedua akan kita jawab pada artikel selanjutnya.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat subreport Jasper dalam SpringMVC]]></title>
    <link href="http://software.endy.muhardin.com/java/membuat-subreport-jasper-dalam-springmvc/"/>
    <updated>2014-04-12T12:26:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/membuat-subreport-jasper-dalam-springmvc</id>
    
    
        <summary type="html"><![CDATA[<p>Pada artikel ini, kita akan membuat implementasi download file PDF/XLS dari aplikasi web. Fitur ini akan kita implementasi menggunakan library <a href="http://community.jaspersoft.com/project/jasperreports-library">Jasper Report</a> dan framework <a href="http://docs.spring.io/spring/docs/4.0.2.RELEASE/spring-framework-reference/html/view.html#view-jasper-reports">Spring MVC</a>.</p>

<p>Projectnya akan kita buat menggunakan Maven, supaya bisa dibuka dengan baik (portable) di berbagai IDE. Untuk bisa memahami artikel ini dengan baik, pembaca harus sudah paham tentang Spring Framework dan Spring MVC. Yang belum paham Spring Framework bisa membaca <a href="http://software.endy.muhardin.com/java/memahami-dependency-injection/">artikel terdahulu tentang Dependency Injection</a>. Sedangkan pembahasan tentang Spring MVC bisa dibaca di <a href="https://www.google.com/search?q=site%3Asoftware.endy.muhardin.com&amp;q=aplikasi+web+dengan+spring">rangkaian artikel berseri tentang membuat aplikasi web dengan Spring MVC</a>.</p>

<p>Source code lengkap dapat diakses di <a href="https://github.com/endymuhardin/belajar-springmvc-jasperreports">repository Github</a>. Bagi yang ingin tahu urutan langkah-langkah implementasinya, bisa lihat <a href="https://github.com/endymuhardin/belajar-springmvc-jasperreports/commits/master">commit history</a>.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cara Mengetahui IP Address dari MAC Address]]></title>
    <link href="http://software.endy.muhardin.com/linux/cara-mengetahui-ip-address-dari-mac-address/"/>
    <updated>2014-04-08T11:59:00+07:00</updated>
    <id>http://software.endy.muhardin.com/linux/cara-mengetahui-ip-address-dari-mac-address</id>
    
    
        <summary type="html"><![CDATA[<p>Jaman sekarang banyak sekali perangkat-perangkat aneh yang menarik untuk dioprek, misalnya <a href="http://en.wikipedia.org/wiki/Raspberry_Pi">Raspberry PI</a>, <a href="http://en.wikipedia.org/wiki/PC-on-a-stick">PC on a stick</a>, Smart TV, <a href="http://www.wd.com/en/products/products.aspx?id=280">Harddisk NAS</a>, dan sebagainya. Semua perangkat aneh ini terhubung ke jaringan baik melalui kabel maupun WiFi.</p>

<p>Di mayoritas jaringan WiFi yang ada, alamat IP diberikan secara otomatis (DHCP), sehingga kita tidak tahu berapa alamat IP untuk perangkat yang ingin kita akses. Tambahan lagi, beberapa router wifi juga kurang bagus antarmukanya seperti pada gambar berikut</p>

<p><img src="https://lh5.googleusercontent.com/-nZMqJy94dy8/U0OD8iwCKAI/AAAAAAAAFjg/sxw8F4pe2XI/w917-h429-no/bolt-dhcp-client-list.png"></p>

<p>Masa yang dicantumkan cuma MAC Address saja? Hostnamenya juga <code>Unknown</code> lagi -_-</p>

<p>Untungnya, ada cara untuk mengkonversi MAC Address menjadi IP. Berikut caranya</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menjadi Mahasiswa Hi-Tech]]></title>
    <link href="http://software.endy.muhardin.com/life/menjadi-mahasiswa-hi-tech/"/>
    <updated>2014-03-09T20:22:00+07:00</updated>
    <id>http://software.endy.muhardin.com/life/menjadi-mahasiswa-hi-tech</id>
    
    
        <summary type="html"><![CDATA[<p>Seperti sudah diceritakan pada <a href="http://software.endy.muhardin.com/java/silabus-kuliah-pemrograman/">posting sebelumnya</a>, saya sudah beberapa tahun ini mengajar di Universitas Pancasila. Total sudah lebih dari 6 kelas yang saya ajar. Kalau satu kelas saja isinya 30 orang, maka setidaknya ada 180 mahasiswa yang telah mengikuti perkuliahan saya.</p>

<p>Memperhatikan perilaku ratusan mahasiswa dalam mengikuti kuliah, saya menemui suatu kondisi yang ironis.</p>

<blockquote><p>Dari sekian banyak mahasiswa, tidak ada satupun yang mengikuti perkuliahan sesuai dengan kondisi jaman sekarang. Semuanya, tanpa terkecuali, masih kuliah seperti halnya saya kuliah di tahun 1997 dulu. Ya benar, selama 17 tahun tidak ada perubahan metodologi sama sekali.</p></blockquote>

<p>Padahal ini mahasiswa jurusan IT, yang sepatutnya menjadi yang terdepan dalam hal memahami dan memanfaatkan teknologi terkini. Mereka masih saja:</p>

<ul>
<li>mendengarkan saya berceloteh di depan kelas</li>
<li>mencatat celotehan saya dan gambar-gambar yang saya buat di papan tulis</li>
<li>pada saat mau ujian, belajar dari catatan tersebut</li>
</ul>


<p>Tidak sebanding dengan persenjataan masing-masing individu:</p>

<ul>
<li>Smartphone. Segelintir pakai iPhone, dan mayoritas pakai Android. Minimal Blackberry.</li>
<li>Internet Nonstop. Baik paket data dari smartphone maupun internet gratis dari kampus.</li>
<li>Sesi kuliah saya selalu diadakan di lab komputer. Masing-masing orang menghadapi PC di depan mukanya.</li>
</ul>


<blockquote><p>Nah, lalu bagaimana seharusnya??</p></blockquote>

<p>Ada beberapa poin yang seharusnya dilakukan mahasiswa jaman sekarang:</p>

<ol>
<li>Jangan mencatat</li>
<li>Tinggal di awan</li>
<li>Kolaborasi menggunakan social networking</li>
<li>Belajar dari internet</li>
</ol>


<blockquote><p>Waduh, tidak mencatat gimana mau ingat? Tidak bawa buku lalu mau menulis dimana? Bukannya orang bilang Facebook itu tidak produktif?</p></blockquote>

<p>Mari kita bahas..</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Silabus Kuliah Pemrograman]]></title>
    <link href="http://software.endy.muhardin.com/java/silabus-kuliah-pemrograman/"/>
    <updated>2014-03-05T12:11:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/silabus-kuliah-pemrograman</id>
    
    
        <summary type="html"><![CDATA[<p>Melanjutkan rutinitas 2 tahun terakhir, minggu ini musim perkuliahan semester genap di Universitas Pancasila dimulai. Saya kebagian pegang Pemrograman 2 di kelas reguler, dan Pemrograman 4 di kelas karyawan. Buat para fans yang pengen ketemu dipersilahkan cari saya di Fakultas Teknik Universitas Pancasila setiap Kamis jam 18-21 dan Jumat jam 09-11.</p>

<p>Berikut adalah silabus perkuliahan dari Pemrograman 1 sampai Pemrograman 4. Silabus ini akan sering saya update mengikuti perkembangan jaman.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript Development Stack]]></title>
    <link href="http://software.endy.muhardin.com/javascript/javascript-development-stack/"/>
    <updated>2014-02-27T21:11:00+07:00</updated>
    <id>http://software.endy.muhardin.com/javascript/javascript-development-stack</id>
    
    
        <summary type="html"><![CDATA[<p>Pada <a href="http://software.endy.muhardin.com/javascript/persiapan-coding-nodejs/">artikel sebelumnya</a>, kita telah sukses menyiapkan kombinasi framework di sisi server. Nah sekarang kita akan siapkan persenjataan untuk aplikasi clientnya.</p>

<p>Artikel bagian kedua ini berselang waktu agak lama dari artikel sebelumnya karena saya bingung :D
Nah saya yakin kebingungan ini juga akan dialami oleh rekan-rekan yang baru belajar server-side-javascript. Ada beberapa hal yang membuat saya bingung, yaitu:</p>

<ul>
<li>arsitektur aplikasi dan bahasa pemrograman</li>
<li>development tools</li>
<li>integrasi aplikasi pada saat development</li>
<li>integrasi aplikasi pada saat production</li>
</ul>


<p>Sebagai gambaran, bentuk akhir dari aplikasi yang akan dibuat seperti ini</p>

<p><img src="https://lh4.googleusercontent.com/-a6DbvzDCjUA/Uw7xgeieBQI/AAAAAAAAFR0/fIac8wOIBGg/w844-h597-no/mean-stack.png"></p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Persiapan Coding NodeJS]]></title>
    <link href="http://software.endy.muhardin.com/javascript/persiapan-coding-nodejs/"/>
    <updated>2014-02-21T15:43:00+07:00</updated>
    <id>http://software.endy.muhardin.com/javascript/persiapan-coding-nodejs</id>
    
    
        <summary type="html"><![CDATA[<p>Menyambung dari pengantar di <a href="http://software.endy.muhardin.com/life/ongoing-learning/">artikel sebelumnya</a>, kali ini kita akan mempersiapkan development environment untuk membuat aplikasi dengan NodeJS dan Redis. Kita juga akan mendeploy aplikasi kita di Heroku agar bisa diakses masyarakat umum.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ongoing Learning]]></title>
    <link href="http://software.endy.muhardin.com/life/ongoing-learning/"/>
    <updated>2014-02-20T12:48:00+07:00</updated>
    <id>http://software.endy.muhardin.com/life/ongoing-learning</id>
    
    
        <summary type="html"><![CDATA[<p>Hidup sebagai programmer bisa diibaratkan seperti nyemplung di laut. Untuk bisa survive, kita harus terus bergerak dan berenang. Begitu kita diam, langsung deh tenggelam.</p>

<p>Ini juga berlaku buat saya yang sudah 12 tahun jadi programmer. Teknologi baru bermunculan dengan cepat dan kita harus <em>keep up to date</em>. Artikel ini adalah bagian pertama dari catatan perjalanan saya belajar teknologi baru. Seperti biasa, source code yang dihasilkan akan saya share di Github.</p>

<p>Mari kita mulai.</p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Development Stack 2014]]></title>
    <link href="http://software.endy.muhardin.com/java/development-stack-2014/"/>
    <updated>2014-02-17T07:29:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/development-stack-2014</id>
    
    
        <summary type="html"><![CDATA[<p>Tiga tahun lalu, saya memposting artikel tentang <a href="http://software.endy.muhardin.com/java/development-stack-2011/">stack development yang digunakan di ArtiVisi</a>. Artikel kali ini adalah update dari stack yang digunakan tiga tahun yang lalu.</p>

<p>Pilihan stack ini saya presentasikan pada pertemuan Java Meet Up (JaMU) Januari 2014 yang diadakan di kantor <a href="http://blibli.com">blibli.com</a>. Materinya bisa diunduh pada link berikut:</p>

<ul>
<li>Slide Presentasi bisa <a href="http://software.endy.muhardin.com/files/slide-presentasi/artivisi-stack-2014.html">dilihat online</a> atau <a href="http://www.4shared.com/zip/Mo47v94uba/presentasi-jamu-01-2014.html">diunduh dalam format ZIP</a></li>
<li><a href="http://www.youtube.com/watch?v=4312GuJVvxs">Rekaman Video dan Screencast</a></li>
</ul>


<p>Berikut rangkuman dari isi presentasi saya tersebut</p>

<p><img src="https://lh3.googleusercontent.com/-5tGzUVc2lk4/UwFrrT20hmI/AAAAAAAAFJk/zRxIxumf_O4/w800-h566-no/restful-architecture.png"></p>

]]></summary>
    
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dasar-dasar Aplikasi Web Java]]></title>
    <link href="http://software.endy.muhardin.com/java/dasar-dasar-aplikasi-web-java/"/>
    <updated>2014-01-20T20:12:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/dasar-dasar-aplikasi-web-java</id>
    
    
        <summary type="html"><![CDATA[<p>Pada artikel terdahulu, kita telah membahas tentang <a href="http://software.endy.muhardin.com/life/lan-na-zha/">pentingnya penguasaan terhadap konsep dasar</a>. Kali ini, kita akan membahas tentang konsep dasar aplikasi web di Java. Ini juga akan menjawab pertanyaan yang sering ditanyakan di forum yaitu</p>

<blockquote><p>Saya ingin belajar Java Enterprise Edition (Java EE), apa yang pertama harus saya pelajari?</p></blockquote>

]]></summary>
    
  </entry>
  
</feed>
