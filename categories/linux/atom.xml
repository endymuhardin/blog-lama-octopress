<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | Living life and make it better]]></title>
  <link href="http://software.endy.muhardin.com/categories/linux/atom.xml" rel="self"/>
  <link href="http://software.endy.muhardin.com/"/>
  <updated>2013-10-31T13:38:15+07:00</updated>
  <id>http://software.endy.muhardin.com/</id>
  <author>
    <name><![CDATA[Endy Muhardin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Menggunakan SSD di Ubuntu]]></title>
    <link href="http://software.endy.muhardin.com/linux/menggunakan-ssd-di-ubuntu/"/>
    <updated>2013-07-16T13:40:00+07:00</updated>
    <id>http://software.endy.muhardin.com/linux/menggunakan-ssd-di-ubuntu</id>
    <content type="html"><![CDATA[<p>Beberapa minggu yang lalu, saya mengganti harddisk menjadi SSD (Solid State Disk).
Pengaruhnya sangat signifikan, dari tekan tombol power sampai desktop siap digunakan hanya makan waktu &lt; 10 detik.
Sebelumnya juga tidak terlalu lama, tapi masih berkisar di atas 1 menit. Demikian juga setelah login, menyalakan Google Chrome, hanya sekejap mata browser sudah tampil. Sebelumnya butuh waktu 5-10 detik.</p>

<p>Pemasangan harddisk tidak jauh berbeda dengan proses instalasi harddisk pada umumnya. Tinggal lepas harddisk lama, dan pasang yang baru. Walaupun demikian, ada beberapa tuning yang harus kita lakukan berkaitan dengan karakteristik SSD, yaitu:</p>

<ul>
<li>optimasi file/folder temporary</li>
<li>mengganti scheduler</li>
<li>optimasi proses hapus</li>
</ul>


<!--more-->


<h2>Opsi atime</h2>

<p>Pada waktu awal dikeluarkan, SSD sudah memiliki karakteristik baca-tulis yang sangat cepat, karena tidak ada bagian bergerak (moving parts) di dalamnya. Walaupun demikian, ada kekurangan SSD (dan juga flashdisk USB yang biasa kita gunakan) yaitu umur pakainya yang relatif pendek. Semakin sering ditulis dan dihapus, maka umurnya semakin pendek.</p>

<p>Karena keterbatasan tersebut, maka ada beberapa <a href="http://askubuntu.com/questions/1400/how-do-i-optimize-the-os-for-ssds">tips tuning Linux</a> supaya dia tidak terlalu sering tulis-hapus, yaitu:</p>

<ul>
<li>mematikan fungsi <code>atime</code>. Fungsi <code>atime</code> gunanya untuk mengupdate keterangan di file dan folder, menunjukkan kapan dia terakhir diakses.</li>
<li>memindahkan file temporary dan logfile ke memori sehingga tidak menulis ke harddisk.</li>
</ul>


<p>Seiring perkembangan teknologi, keterbatasan umur SSD ini sudah berhasil diatasi. <a href="http://www.storagesearch.com/ssdmyths-endurance.html">Sebuah percobaan di tahun 2007</a> membuktikan bahwa bila kita melakukan tulis-hapus-tulis-hapus dengan kecepatan 80Mbps 24 jam sehari, maka SSD bisa bertahan sampai 51 tahun. Itu percobaan tahun 2007, tentu di tahun 2013 ini SSD sudah semakin baik. Lagipula dalam kurun waktu tersebut kita pasti akan mengganti harddisk. Bukan karena rusak, melainkan karena sudah tidak muat lagi menampung segala macam foto, musik, video yang kita miliki. Seperti halnya di tahun 2000, kita sudah merasa cukup dengan floppy disk 1,4 MB :)</p>

<p>Jadi sebetulnya kita tidak perlu khawatir lagi, khususnya dengan fungsi <code>atime</code> pada Linux.</p>

<p>Bagi yang masih khawatir, bisa mematikan fungsi <code>atime</code> ini pada file <code>/etc/fstab</code> dengan menambahkan opsi <code>noatime</code>. Berikut isi file <code>/etc/fstab</code> yang asli</p>

<p>```</p>

<h1>/ was on /dev/sda1 during installation</h1>

<p>UUID=a7c6516b-b6c7-481a-b85f-5297f6ffcbbb        /     ext4    errors=remount-ro 0  1</p>

<h1>/home was on /dev/sda6 during installation</h1>

<p>UUID=0dfcd40a-28bd-4d7f-8e41-4ab85ef776fa        /home ext4    defaults          0  2
```</p>

<p>Dan ini yang telah ditambahi opsi <code>noatime</code></p>

<p>```</p>

<h1>/ was on /dev/sda1 during installation</h1>

<p>UUID=a7c6516b-b6c7-481a-b85f-5297f6ffcbbb        /     ext4    noatime,nodiratime,errors=remount-ro 0   1</p>

<h1>/home was on /dev/sda6 during installation</h1>

<p>UUID=0dfcd40a-28bd-4d7f-8e41-4ab85ef776fa        /home ext4    noatime,nodiratime,defaults          0   2
```</p>

<p>Tapi sekali lagi saya tekankan bahwa ini tidak perlu. Selain umur pakai SSD yang sudah dijelaskan di atas, juga optimasi di sisi Linux sendiri. Secara default, <a href="http://askubuntu.com/questions/2099/is-it-worth-to-tune-ext4-with-noatime">Linux masa kini menggunakan opsi <code>relatime</code> yang lebih cerdas daripada <code>atime</code></a>.</p>

<h2>Temporary File/Folder</h2>

<p>Optimasi ini bermanfaat tidak cuma untuk harddisk SSD. Intinya, file temporary yang biasanya ada di folder <code>/tmp</code> dan berbagai log aplikasi yang ada di <code>/var/log</code> akan kita pindahkan ke RAM. Akses baca-tulis dari RAM jauh lebih cepat daripada disk. Konsekuensinya, file yang dipindah ke memori ini akan hilang pada waktu komputer direstart. Untuk komputer desktop tidak masalah karena kita jarang menggunakan logfile. Tapi ini menjadi masalah buat server, karena logfile berguna untuk kebutuhan analisa dan troubleshooting bila terjadi masalah.</p>

<p>Untuk memindahkan kegiatan baca-tulis folder <code>/tmp</code> dan <code>/var/log</code> dari harddisk ke memori, tambahkan baris berikut di <code>/etc/fstab</code></p>

<p><code>
tmpfs  /tmp            tmpfs   defaults,noatime,mode=1777 0 0
tmpfs  /var/spool      tmpfs   defaults,noatime,mode=1777 0 0
tmpfs  /var/log        tmpfs   defaults,noatime,mode=0755 0 0
</code></p>

<p>Entri yang ada labelnya <code>tmpfs</code> artinya akan disimpan di RAM.</p>

<p>Semua file dan folder yang bersifat sementara bisa kita pindahkan ke <code>tmpfs</code>. Beberapa orang juga menaruh <code>/var/cache/apt/archives</code> (berisi file <code>*.deb</code> yang diunduh selama proses instalasi) dalam <code>tmpfs</code> agar tidak bikin penuh harddisk. Saya tidak melakukannya karena membutuhkan file ini untuk keperluan [upgrade dan replikasi instalasi].</p>

<p>Walaupun demikian, folder <code>/var/tmp</code> jangan disimpan di <code>tmpfs</code>, karena dia <a href="http://linuxers.org/article/differences-between-tmp-and-vartmp">berbeda dengan file temporary lainnya</a></p>

<h2>I/O Scheduler</h2>

<p>Linux secara default menganggap kita menggunakan harddisk tradisional. Dia menggunakan sistem antrian (scheduler) <a href="http://en.wikipedia.org/wiki/CFQ">CFQ</a>, mendahulukan request yang lokasinya terdekat dengan posisi jarum harddisk (sehingga lebih cepat). Karena SSD tidak pakai jarum, akses ke semua tempat dalam disk kecepatannya sama, sehingga tidak perlu diatur seperti CFQ. Untuk itu, kita bisa gunakan scheduler <a href="http://en.wikipedia.org/wiki/Deadline_scheduler">deadline</a> yang lebih cepat.</p>

<p>Posisi scheduler yang sedang aktif bisa dilihat dengan perintah berikut</p>

<p><code>
cat /sys/block/sda/queue/scheduler
</code></p>

<p>Outputnya di Ubuntu saya seperti ini</p>

<p><code>
noop [deadline] cfq
</code></p>

<p>Artinya yang sedang aktif adalah <code>deadline</code>, dan pilihan lain yang tersedia adalah <code>noop</code> dan <code>cfq</code>. Entah kenapa, Ubuntu sudah memilih <code>deadline</code> secara default, sehingga saya tidak perlu melakukan konfigurasi tambahan. Namun bila kondisinya berbeda di komputer Anda, tambahkan dua baris ini di akhir file <code>/etc/rc.local</code> di atas baris <code>exit 0</code></p>

<p><code>
echo deadline &gt; /sys/block/sda/queue/scheduler
echo 1 &gt; /sys/block/sda/queue/iosched/fifo_batch
</code></p>

<p>Ganti <code>sda</code> dengan nama device harddisk Anda.</p>

<h2>Optimasi Proses Hapus</h2>

<p>Harddisk SSD memiliki <a href="http://en.wikipedia.org/wiki/TRIM">fitur TRIM</a> yang memungkinkan SSD mencatat blok mana yang sudah tidak terpakai (karena filenya dihapus), sehingga bisa digunakan lagi oleh file lain. Fitur TRIM ini bisa dilakukan secara otomatis maupun secara manual.</p>

<p>Untuk mengaktifkan TRIM otomatis, tambahkan opsi <code>discard</code> di <code>/etc/fstab</code> seperti ini</p>

<p>```</p>

<h1>/ was on /dev/sda1 during installation</h1>

<p>UUID=a7c6516b-b6c7-481a-b85f-5297f6ffcbbb       /       ext4    discard,errors=remount-ro 0  1</p>

<h1>/home was on /dev/sda6 during installation</h1>

<p>UUID=0dfcd40a-28bd-4d7f-8e41-4ab85ef776fa       /home   ext4    discard,defaults          0  2
```</p>

<p>Walaupun demikian, TRIM otomatis <a href="https://patrick-nagel.net/blog/archives/337">kadangkala malah membuat lambat</a>. Untuk itu, kadangkala kita perlu menjalankan trim secara manual dengan perintah berikut</p>

<p><code>
sudo fstrim -v /
sudo fstrim -v /home
</code></p>

<p>Perintah tersebut dijalankan untuk setiap partisi dalam harddisk SSD kita. Contohnya seperti di atas bila Anda seperti saya, memisahkan antara partisi <code>/</code> dan <code>/home</code>.</p>

<p>Kita juga bisa menjalankannya secara terjadwal menggunakan <code>cron</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Akses VM Proxmox Tanpa Applet]]></title>
    <link href="http://software.endy.muhardin.com/linux/akses-vm-proxmox-tanpa-applet/"/>
    <updated>2013-02-28T14:22:00+07:00</updated>
    <id>http://software.endy.muhardin.com/linux/akses-vm-proxmox-tanpa-applet</id>
    <content type="html"><![CDATA[<p>Jika kita ingin mengakses virtual machine di dalam Proxmox,
ada beberapa opsi yang bisa kita gunakan, yaitu:</p>

<ul>
<li>SSH langsung ke IP virtual machine tersebut.</li>
<li>Login ke web management Proxmox, kemudian pilih virtual machine, dan jalankan VNC console yang berupa aplikasi Java applet.</li>
<li>SSH ke mesin host, dan kemudian masuk ke console virtual machine</li>
<li>Membuat VNC server yang bisa diakses dari luar</li>
</ul>


<p>Kadangkala, kita tidak bisa menjalankan opsi pertama, karena belum menginstal SSH server di VM.
Opsi kedua sering tidak lancar di Linux.
Opsi ketiga hanya bisa dijalankan untuk OpenVZ, saya belum ketemu caranya untuk KVM.
Dengan demikian, kita harus menggunakan cara keempat.</p>

<!--more-->


<p>Berikut adalah caranya. Pertama kita ssh dulu ke mesin host.
Setelah itu kita tampilkan daftar semua VM yang bertipe KVM
dengan perintah <code>qm list</code></p>

<p>```</p>

<h1>qm list</h1>

<pre><code>  VMID NAME                 STATUS     MEM(MB)    BOOTDISK(GB) PID
   101 vm110                running    512               30.00 16474
   103 vm103                stopped    512               80.00 0
   104 vm104                running    256               80.00 16256
   107 vm107                running    2000              50.00 16348
   113 vm113                stopped    512               32.00 0
   115 vm115                running    8000             100.00 16316
   116 vm116                running    1000              80.00 16460
   119 vm119                running    1000              20.00 16390
   120 vm120                running    1000              40.00 16284
   166 vm166                running    1024             150.00 16440
   190 vm190                running    512               20.00 16270
   199 vm199                running    1024               5.00 16300
</code></pre>

<p>```</p>

<p>Kita bisa membuka VNC server yang mengarah ke VM dengan ID tertentu
dengan perintah berikut:</p>

<p><code>
nc -l -p portvnc -c "qm vncproxy vmid passwdvnc"
</code></p>

<p>Misalnya, bila kita ingin mengakses VMID <code>166</code> di port <code>10166</code> dengan password <code>abc321</code>,
maka perintahnya adalah sebagai berikut</p>

<p><code>
nc -l -p 10166 -c "qm vncproxy 166 abc321"
</code></p>

<p>Setelah itu, kita bisa mengakses VM tersebut menggunakan VNC client seperti pada screenshot.</p>

<p><img src="/images/uploads/2013/02/28/vnc-kvm.png" title="Konfigurasi VNC Client" ></p>

<p>Kosongkan saja username dan password, nanti kita akan dimintai password oleh aplikasinya.</p>

<p>Hal yang sama bisa dilakukan juga dengan OpenVZ.</p>

<p>Pertama, cari dulu VM yang mau diakses dengan perintah <code>vzlist</code></p>

<p>```</p>

<h1>vzlist</h1>

<pre><code>  CTID      NPROC STATUS    IP_ADDR         HOSTNAME
   102        229 running   202.202.202.200  vm102
   105         40 running   202.202.202.201  vm105
   106         27 running   202.202.202.202  vm106
   108         21 running   202.202.202.203  vm108
   110         46 running   202.202.202.204  vm110
   111         61 running   202.202.202.205  vm111
   112         16 running   202.202.202.206  vm112
   114         39 running   202.202.202.207  vm114
   117         18 running   202.202.202.208  vm117
   121         43 running   202.202.202.209  vm121
   130         32 running   202.202.202.210  vm130
</code></pre>

<p>```</p>

<p>Kemudian gunakan perintah berikut</p>

<p><code>
vncterm -c vzctl enter VMID
</code></p>

<p>Misalnya, bila ingin mengakses VM 111, maka perintahnya adalah</p>

<p><code>
vncterm -rfbport 10111 -c vzctl enter 104
</code></p>

<p>Referensi :</p>

<ul>
<li><a href="http://forum.proxmox.com/threads/612-External-VNC-viewer">Forum Proxmox</a></li>
<li><a href="http://honglus.blogspot.com/2011/02/access-guest-vm-console-via-text-mode.html">UNIX/LINUX TECH NOTES</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Proxmox dengan 1 IP Public]]></title>
    <link href="http://software.endy.muhardin.com/linux/setup-proxmox-dengan-1-ip-public/"/>
    <updated>2013-02-12T20:05:00+07:00</updated>
    <id>http://software.endy.muhardin.com/linux/setup-proxmox-dengan-1-ip-public</id>
    <content type="html"><![CDATA[<p>Jaman sekarang, membuat server untuk cloud tidak lagi sulit.
Cukup cari server nganggur, unduh <a href="http://pve.proxmox.com/">Proxmox</a>,
kemudian instal.</p>

<p>Instalasinya pun tidak sulit, dia cuma menanyakan mau diberi IP berapa,
password untuk user root, dan selesai sudah.
Selanjutnya, server ini tinggal kita taruh di data center.</p>

<p>Dengan Proxmox ini, kita dapat membuat virtual machine (VM) sebanyak-banyaknya
yang mampu ditangani oleh hardware servernya.
Pembuatan VM ini dilakukan melalui antarmuka berbasis web,
sehingga kita tidak perlu lagi menghafalkan perintah-perintah command line.</p>

<p>Walaupun VM bisa dibuat sesuka hati, seringkali IP public yang tersedia terbatas jumlahnya.
Punya VM banyak tapi tidak bisa diakses dari luar tentu percuma saja.
Pada artikel ini, kita akan membahas cara supaya satu IP public bisa dimanfaatkan oleh banyak VM.</p>

<!--more-->


<h1>Konfigurasi Host</h1>

<p>Agar ada gambaran, berikut adalah konfigurasi awal setelah instalasi.
Tentunya pembaca maklum bahwa semua IP yang ditulis di sini adalah palsu belaka.</p>

<ul>
<li>IP public (digunakan oleh Proxmox Host) : 202.202.202.202</li>
<li>Network Device : eth0, dibridge menjadi vmbr0</li>
<li>Versi Proxmox : 2-2-24</li>
</ul>


<p>Berikut adalah hasil keluaran perintah <code>ifconfig</code> dalam host :</p>

<p>```
eth0      Link encap:Ethernet  HWaddr 00:21:5e:27:05:30</p>

<pre><code>      inet6 addr: fe80::221:5eff:fe27:530/64 Scope:Link
      UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
      RX packets:643194 errors:0 dropped:0 overruns:0 frame:0
      TX packets:225604 errors:0 dropped:0 overruns:0 carrier:0
      collisions:0 txqueuelen:1000 
      RX bytes:196913694 (187.7 MiB)  TX bytes:35911168 (34.2 MiB)
      Interrupt:16 Memory:ce000000-ce012800
</code></pre>

<p>vmbr0     Link encap:Ethernet  HWaddr 00:21:5e:27:05:30</p>

<pre><code>      inet addr:202.202.202.202  Bcast:202.202.202.203  Mask:255.255.255.248
      inet6 addr: fe80::221:5eff:fe27:530/64 Scope:Link
      UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
      RX packets:571124 errors:0 dropped:0 overruns:0 frame:0
      TX packets:206100 errors:0 dropped:0 overruns:0 carrier:0
      collisions:0 txqueuelen:0 
      RX bytes:177290314 (169.0 MiB)  TX bytes:31457704 (30.0 MiB)
</code></pre>

<p>```</p>

<p>Dan ini adalah isi file <code>/etc/network/interfaces</code> dalam host</p>

<p>```
iface eth0 inet manual</p>

<p>auto vmbr0
iface vmbr0 inet static</p>

<pre><code>address  202.202.202.202
netmask  255.255.255.248
gateway  202.202.202.201
bridge_ports eth0
bridge_stp off
bridge_fd 0
</code></pre>

<p>```</p>

<h1>Konfigurasi VM</h1>

<p>Kita mempunyai satu VM dengan konfigurasi berikut :</p>

<ul>
<li>IP Address : 192.168.100.100</li>
<li>Jenis Interface : venet</li>
</ul>


<p>Berikut adalah output dari <code>ifconfig</code></p>

<p>```
lo        Link encap:Local Loopback</p>

<pre><code>      inet addr:127.0.0.1  Mask:255.0.0.0
      inet6 addr: ::1/128 Scope:Host
      UP LOOPBACK RUNNING  MTU:16436  Metric:1
      RX packets:0 errors:0 dropped:0 overruns:0 frame:0
      TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
      collisions:0 txqueuelen:0 
      RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
</code></pre>

<p>venet0    Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00</p>

<pre><code>      inet addr:127.0.0.2  P-t-P:127.0.0.2  Bcast:0.0.0.0  Mask:255.255.255.255
      UP BROADCAST POINTOPOINT RUNNING NOARP  MTU:1500  Metric:1
      RX packets:33307 errors:0 dropped:0 overruns:0 frame:0
      TX packets:16717 errors:0 dropped:8 overruns:0 carrier:0
      collisions:0 txqueuelen:0 
      RX bytes:49576164 (49.5 MB)  TX bytes:916607 (916.6 KB)
</code></pre>

<p>venet0:0  Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00</p>

<pre><code>      inet addr:192.168.100.100  P-t-P:192.168.100.100  Bcast:0.0.0.0  Mask:255.255.255.255
      UP BROADCAST POINTOPOINT RUNNING NOARP  MTU:1500  Metric:1
</code></pre>

<p>```</p>

<h1>Akses dari dalam VM ke Internet</h1>

<p>Yang pertama kita kerjakan adalah bagaimana caranya supaya VM ini bisa mengakses internet.
Caranya adalah memasang NAT di Proxmox Host supaya paket data dari network <code>192.168.100.0/24</code>
diijinkan untuk keluar dan melalui proses Network Address Translation (NAT).</p>

<p>Perintahnya adalah sebagai berikut</p>

<p><code>
iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -o vmbr0 -j MASQUERADE
</code></p>

<p>Perintah ini tentunya tidak asing bagi yang sering mengkonfigurasi internet gateway dengan Linux.
Caranya sama persis, seolah-olah ada banyak komputer dengan IP <code>192.168.100.xxx</code> yang ingin mengakses internet.</p>

<p>Setelah ini dijalankan, kita coba tes akses internet dari dalam VM.
Jalankan perintah berikut dari Proxmox Host untuk masuk ke dalam VM.</p>

<p><code>
vzctl enter 107
</code></p>

<p><code>107</code> adalah ID dari VM yang ingin kita masuki.</p>

<p>Begitu sudah masuk, coba ping ke alamat internet.</p>

<p><code>
ping google.com
PING google.com (173.194.38.137) 56(84) bytes of data.
64 bytes from sin04s01-in-f9.1e100.net (173.194.38.137): icmp_req=1 ttl=57 time=12.2 ms
64 bytes from sin04s01-in-f9.1e100.net (173.194.38.137): icmp_req=2 ttl=57 time=12.3 ms
^C
--- google.com ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 12.257/12.293/12.330/0.116 ms
</code></p>

<p>Tentunya kita harus pastikan dulu Proxmox Host bisa ping ke Google.
Bila Proxmox Host saja tidak bisa akses internet, ya jangan harap VM bisa akses internet.
Ini kan bukan acara sulap.</p>

<p>Baiklah, VM kita sudah bisa mengakses internet, lanjut ke langkah berikut.</p>

<h1>Mengakses VM dari Internet</h1>

<p>Minimal kita ingin agar VM kita tersebut bisa diakses melalui SSH.
Service SSH di Linux biasanya jalan di port <code>22</code>.
Karena port <code>22</code> di Proxmox Host sudah dipakai oleh dirinya sendiri,
kita harus pilih port lain, misalnya <code>10722</code>.
Teknik ini disebut dengan istilah <em>port forwarding</em></p>

<p>Perintahnya juga sama dengan perintah untuk NAT dari internet ke jaringan LAN,
tentu rekan-rekan yang biasa mengkonfigurasi internet gateway tidak merasa asing.</p>

<p><code>
iptables -t nat -A PREROUTING -i vmbr0 -p tcp -m tcp --dport 10722 -j DNAT --to-destination 192.168.100.100:22
</code></p>

<p>Setelah itu, kita test dari komputer kita</p>

<p><code>
ssh root@202.202.202.202 -p 10722
</code></p>

<p>Seharusnya kita sudah bisa login ke dalam VM.</p>

<p>Selanjutnya, kalau ingin membuat <em>port forwarding</em> untuk port lain caranya sama.</p>

<p><code>
iptables -t nat -A PREROUTING -i vmbr0 -p tcp -m tcp --dport 10780 -j DNAT --to-destination 192.168.100.100:80
</code></p>

<p>Perintah di atas akan membuka port <code>10780</code> di IP public Proxmox Host
dan data yang datang ke sana diarahkan ke port <code>80</code> di VM <code>107</code> yang memiliki IP private <code>192.168.100.100</code>.</p>

<p>Demikianlah, satu IP public yang kita miliki bisa dipakai oleh banyak VM yang ada dalam satu server tersebut.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backup Home Folder]]></title>
    <link href="http://software.endy.muhardin.com/linux/backup-home-folder/"/>
    <updated>2011-08-26T23:00:29+07:00</updated>
    <id>http://software.endy.muhardin.com/linux/backup-home-folder</id>
    <content type="html"><![CDATA[<p>Seberapa penting file di komputer kita? Tentu tidak ternilai harganya. Tapi apakah kita melakukan backup secara terhadap file-file di komputer kita? Beberapa menit yang lalu, saya menjawab tidak untuk pertanyaan tersebut.</p>

<p>Kenapa backup tidak dilakukan? Penyebab utamanya biasanya adalah karena merepotkan. Kita harus pilih file yang mau dibackup, membuka aplikasi backup, lalu menjalankannya. Walaupun cuma butuh waktu beberapa menit, tapi biasanya kita sering menunda dan akhirnya lupa.</p>

<p>Cara paling efektif untuk melakukan backup rutin adalah dengan mengotomasinya. Effort untuk melakukan setup cukup sekali saja, selanjutnya backup akan berjalan otomatis tanpa kita sadari. Pada artikel ini, saya akan posting teknik backup yang saya gunakan.</p>

<p>Sebelum kita mulai, terlebih dulu kita tentukan requirementnya, supaya jelas apa yang kita ingin capai. Saya ingin membackup folder tertentu di komputer saya (misalnya <em>/home/endy</em> dan <em>/opt/multimedia/Photos</em>). Backup ini dilakukan secara rutin (misalnya satu jam sekali, satu hari sekali, atau satu minggu sekali). Selain rutin, juga harus incremental. Artinya kalau saya punya backup hari ini jam 11, maka backup selanjutnya di jam 12 hanya menyimpan file yang berubah saja. Dengan demikian, saya bisa jalankan backupnya satu jam sekali dan tidak akan menyebabkan harddisk menjadi penuh dalam beberapa jam saja.</p>

<!--more-->


<p>Kalau kita cari di Google dengan keyword <em>ubuntu backup application</em>, ada banyak sekali aplikasi backup yang tersedia.
Ada Unison, Bacula, SBackup, rdiff-backup, Deja Dup, dan <a href="http://davestechshop.net/ListOfFreeOpenSourceLinuxUbuntuBackupSoftware">entah apa lagi</a>. Walaupun demikian, seperti biasanya, saya akan gunakan aplikasi yang paling populer, universal (ada di mana-mana), dan bisa dijalankan dari command line (supaya bisa diotomasi dengan cron). Pilihannya tentu adalah <em>rsync</em>.</p>

<p><em>rsync</em> adalah aplikasi untuk melakukan file transfer. Dia memiliki beberapa kelebihan, diantaranya :</p>

<ul>
<li><p>tersedia di semua *nix (misalnya Linux dan Mac)</p></li>
<li><p>berbasis command line, sehingga bisa saya aplikasikan juga di server</p></li>
<li><p>sudah teruji kehandalannya</p></li>
<li><p>bisa resume (bila transfer putus di tengah jalan, tidak perlu ulang dari awal)</p></li>
<li><p>data yang ditransfer bisa dikompres, supaya lebih cepat</p></li>
<li><p>bisa mengirim data melalui ssh, sehingga keamanan data terjamin</p></li>
<li><p>memiliki kemampuan hard linking sehingga bisa menghemat space (akan dijelaskan lebih lanjut)</p></li>
</ul>


<p>With great power, comes great complexity. Demikian kata pamannya Spiderman seandainya dia harus menggunakan <em>rsync</em>. Saking banyaknya opsi, sehingga kita bingung apa yang harus dipakai. Berikut adalah opsi rsync yang saya gunakan :</p>

<ul>
<li><p>a : archive. Opsi ini sama dengan kalau kita mengaktifkan opsi rlptgoD</p></li>
<li><p>r : rekursif sampai ke subfolder terdalam</p></li>
<li><p>l : symlink tetap dicopy sebagai symlink</p></li>
<li><p>p : file permission disamakan dengan aslinya</p></li>
<li><p>t : modification time (waktu terakhir update) disamakan dengan aslinya</p></li>
<li><p>g : kepemilikan group disamakan dengan aslinya</p></li>
<li><p>o : kepemilikan owner disamakan dengan aslinya</p></li>
<li><p>D : file device dan special disamakan dengan aslinya</p></li>
<li><p>force : folder kosong di tujuan dihapus walaupun ada isinya</p></li>
<li><p>ignore-errors : lanjut terus walaupun ada error</p></li>
<li><p>exclude-from : file text berisi daftar file/folder yang tidak perlu ditransfer</p></li>
<li><p>link-dest : lihat ke folder yang disebutkan, kalau ada file yang sama, buat hard link</p></li>
</ul>


<p>Pada penjelasan di atas, beberapa kali disebutkan istilah hard-link. Di Linux, suatu file terdiri dari dua bagian : isi (content), dan nama. Satu content yang sama bisa saja memiliki dua nama yang berbeda di folder berbeda sehingga terlihat seolah-olah ada dua file.
Misalnya, kita memiliki file bernama <em>coba.txt</em>. Ini artinya, ada satu content dan satu nama file coba.txt. Kita bisa membuat nama file baru yang isinya sama dengan perintah sebagai berikut</p>

<p><em>__ln coba.txt halo.txt</em></p>

<p>Perintah di atas akan membentuk file <em>halo.txt</em> yang isinya sama dengan <em>coba.txt</em>. Kalau kita edit <em>coba.txt</em>, maka isi file <em>halo.txt</em> juga akan berubah, karena mereka sebetulnya menunjuk ke benda yang sama.</p>

<p>Dengan menggunakan hard-link ini, kita bisa menduplikasi file tanpa menduplikasi space di harddisk. Ini akan sangat berguna untuk membuat incremental backup, karena kita bisa membuat backup sesering mungkin tanpa memenuhi isi harddisk.</p>

<p>Fitur ini kita gunakan pada <em>rsync</em> dengan opsi <em>link-dest</em>. Sebagai contoh, kita jalankan backup pertama kali dan menghasilkan folder <em>20110826-1100</em>. Pada waktu kita jalankan backup kedua, kita berikan opsi <em>link-dest=20110826-1100</em>. Saat akan mengisi folder yang baru (misalnya <em>20110826-1200</em>), <em>rsync</em> akan melihat ke folder <em>20110826-1100</em> dan memeriksa apakah file yang sama sudah ada. Bila sudah ada, maka <em>rsync</em> tidak akan menulis file baru, melainkan hanya akan membuat hard-link saja. Jadi, bila backup pertama berisi 100 file dengan total 10 GB, dan backup kedua berisi 99 file yang sama, dan 1 file saja yang berubah dengan ukuran 1 GB, maka total space yang terpakai adalah 10 GB (backup pertama) dan 1 GB (backup kedua), bukannya 20 GB.</p>

<p>Setelah kita memahami opsi <em>rsync</em>, berikut adalah perintah yang kita gunakan</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-cmd.txt'></script>
<noscript><pre><code>rsync -a --force --ignore-errors --exclude-from=rsync-exclude.txt --link-dest=folder-backup-sebelumnya SRC DEST</code></pre></noscript></div>
</p>

<p>File <em>rsync-exclude.txt</em> berisi folder yang tidak dibackup, punya saya isinya seperti ini :</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-exclude.txt'></script>
<noscript><pre><code>#rsync script exclude file
**/.thumbnails/
**/Desktop/Trash/
**/.cache/
**/.m2/
**/.metadata/
**/.netbeans/
**/.shotwell/
**/.config/
**/.gconf/
**/virtual-machines/</code></pre></noscript></div>
</p>

<p><em>folder-backup-sebelumnya</em> perlu dihitung dulu. Caranya menggunakan perintah <em>ls -tr</em> yang akan menampilkan isi folder yang diurutkan berdasarkan modification time secara descending. Berikut contoh outputnya.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=ls-ltr-output'></script>
<noscript><pre><code>ls -ltr /opt/downloads/backups/
total 12
drwxr-xr-x 3 endy endy 4096 2011-08-26 13:21 20110826-1321
drwxr-xr-x 3 endy endy 4096 2011-08-26 14:07 20110826-1407
drwxr-xr-x 3 endy endy 4096 2011-08-26 14:27 20110826-1427</code></pre></noscript></div>
</p>

<p>Dari sini, kita cukup ambil yang paling atas menggunakan perintah <em>tail -1</em></p>

<p><div><script src='https://gist.github.com/1172978.js?file=ls-ltr-tail'></script>
<noscript><pre><code>ls -tr /opt/downloads/backups/ | tail -1
20110826-1427</code></pre></noscript></div>
</p>

<p>Dengan bermodalkan pengetahuan tersebut, kita bisa membuat script seperti ini.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=rsync-backup.sh'></script>
<noscript><pre><code>#!/usr/bin/env bash

# run hourly with cron
# 0 * * * * /path/ke/rsync-backup.sh /home/endy /opt/downloads/backups /path/ke/rsync-exclude.txt

SRC=$1
DEST=$2
EXCLUDES=$3
args=(&quot;$@&quot;);
MORE_OPTS=${args[@]:3}

if [ &quot;$#&quot; -lt 3 ]; then
    echo &quot;Usage : $0 &lt;src&gt; &lt;dest&gt; &lt;exclude list&gt; [rsync options]&quot;
    return 1
fi


LAST=$(ls -tr $DEST | tail -1)
if [ &quot;$LAST&quot; != &quot;&quot; ]; then
        LINK=&quot;--link-dest=$DEST/$LAST&quot;
fi

OPTS=&quot; -a --force --ignore-errors --exclude-from=$EXCLUDES $LINK&quot;

# echo OPTS $OPTS MORE_OPTS $MORE_OPTS

rsync $OPTS $MORE_OPTS $SRC $DEST/$(date +%Y%m%d-%H%M)</code></pre></noscript></div>
</p>

<p>Untuk membackup folder <em>/home/endy</em> ke folder <em>/opt/downloads/backups</em>, kita jalankan seperti ini :</p>

<p><div><script src='https://gist.github.com/1172978.js?file=exec-backup.sh'></script>
<noscript><pre><code>./rsync-backup-home.sh /home/endy /opt/downloads/backups rsync-exclude.txt</code></pre></noscript></div>
</p>

<p>Selanjutnya, kita bisa pasang di crontab dengan setting seperti ini, supaya dijalankan tiap tiga jam.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=crontab.txt'></script>
<noscript><pre><code>0 */3 * * * /path/ke/rsync-backup-home.sh /home/endy /opt/downloads/backups /path/ke/rsync-exclude.txt</code></pre></noscript></div>
</p>

<p>Voila ... folder home kita sudah terbackup secara otomatis tanpa kita sadari. Sepanjang menulis artikel ini, laptop saya sudah membackup dirinya sendiri sebanyak 3 kali :D</p>

<p>Setelah membuat backup di harddisk laptop, tentunya kita ingin memindahkannya ke external harddisk supaya kita bisa mengosongkan lokasi backup di laptop.</p>

<p>Berikut adalah perintah rsync yang digunakan.</p>

<p><div><script src='https://gist.github.com/1172978.js?file=copy-backup-to-external.sh'></script>
<noscript><pre><code>rsync -avzPH /opt/downloads/backups /media/DATA2/</code></pre></noscript></div>
</p>

<p>Dan ini adalah penjelasan terhadap opsi yang digunakan:</p>

<ul>
<li><p>P : sama dengan partial dan progress</p></li>
<li><p>partial : file yang baru dicopy sebagian tetap disimpan agar bisa diresume</p></li>
<li><p>progress : menampilkan progress report</p></li>
<li><p>H : hard link dicopy sebagai hard link juga. Tanpa opsi ini, tiap hard link akan dibuatkan file baru sehingga boros space harddisk</p></li>
</ul>


<p>Perintah untuk transfer ke external harddisk ini tidak saya jalankan secara otomatis via cron, karena harddisknya belum tentu terpasang.</p>

<p>Demikianlah artikel tentang backup rutin. Mudah-mudahan kita semua bisa terhindar dari musibah harddisk.</p>

<h3>Referensi</h3>

<ul>
<li><p><a href="http://www.mikerubel.org/computers/rsync_snapshots">Easy Automated Snapshot-Style Backups with Linux and Rsync</a></p></li>
<li><p><a href="http://www.hermann-uwe.de/blog/simple-backups-using-rsync">Simple backup using rsync</a></p></li>
<li><p><a href="http://rsync.samba.org/examples.html">rsync examples</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Screencast]]></title>
    <link href="http://software.endy.muhardin.com/aplikasi/linux/membuat-screencast/"/>
    <updated>2011-06-28T01:03:23+07:00</updated>
    <id>http://software.endy.muhardin.com/aplikasi/linux/membuat-screencast</id>
    <content type="html"><![CDATA[<p>Jaman sekarang sudah semakin maju. Fakir bandwidth semakin sedikit. Oleh karena itu, media komunikasi juga berubah, yang tadinya berbasis teks (hemat bandwidth) menjadi multimedia (rakus bandwidth).</p>

<p>Demi mengikuti perkembangan jaman, saya mengeksplorasi pembuatan tutorial dalam bentuk screencast. Ternyata hasilnya memuaskan. Dengan beberapa menit merekam screencast, informasi yang disampaikan sama dengan beberapa jam mengetik blog entry.</p>

<p>Artikel ini saya tulis untuk mendokumentasikan langkah-langkah membuat screencast, mulai dari merekam screencast, sampai mempublikasikannya di blog.</p>

<h2>Merekam video</h2>

<p>Di Ubuntu ada dua aplikasi yang saya coba, yaitu Xvidcap dan Record My Desktop. Dua-duanya sama fungsinya dan tidak ada perbedaan yang signifikan. Setelah mencoba keduanya, pendapat saya adalah Record My Desktop lebih mudah digunakan. Jadi, inilah aplikasi yang saya pilih.</p>

<p>Perlu diperhatikan kemampuan prosesor komputer Anda. Ini kaitannya dengan setting frame per second (fps). Bila fps melebihi kemampuan prosesor, video yang kita rekam akan terlihat lebih cepat dari sebenarnya. Di laptop saya, setting 15 fps akan menghasilkan video yang kira-kira 2x lebih cepat. Setelah trial and error, saya temukan bahwa 9 fps adalah setting yang tepat.</p>

<p>Perbedaan yang utama di antara kedua aplikasi ini adalah format outputnya. Record My Desktop mengeluarkan format ogv sedangkan Xvidcap mengeluarkan format mpeg. Perbedaan format ini nantinya akan mempengaruhi langkah pemrosesan selanjutnya.</p>

<h2>Merekam suara</h2>

<p>Biasanya, saya merekam suara dalam proses yang terpisah, supaya tidak banyak ehm dan eee. Rekaman dibuat sambil menonton screencast yang sudah kita rekam. Setelah rekaman suara dibuat, bisa diedit dengan menggunakan aplikasi Audacity untuk menghilangkan noise, memotong bagian yang tidak penting, dan sebagainya.</p>

<h2>Menggabungkan video dan audio</h2>

<p>Selanjutnya, kita menggunakan aplikasi Avidemux untuk menggabungkan file audio dan file video menjadi satu file. Dengan aplikasi ini kita juga bisa mengedit video untuk menghilangkan bagian-bagian yang tidak perlu ataupun menyambung beberapa video menjadi satu.</p>

<h2>Mempersiapkan format video untuk web</h2>

<p>Ada berbagai format video yang tersedia. Masing-masing format memiliki dukungan browser yang berbeda-beda. Daftar lengkapnya bisa dilihat <a href="http://diveintohtml5.info/video.html#what-works">di sini</a></p>

<p>Pada intinya, supaya bisa dilihat di berbagai browser, kita harus menyediakan file dengan format ogv, mp4, dan webm. Kita juga harus menyertakan poster dalam format jpg atau png supaya bisa ditampilkan dengan benar di browser.</p>

<p>Ada beberapa script yang bisa digunakan, misalnya <a href="https://github.com/kwiliarty/vfe-sh">ini</a> atau <a href="http://brettterpstra.com/automating-html5-video-encodes/">ini</a></p>

<p>Atau, kita juga bisa menjalankan commandnya satu persatu di command line. Berikut adalah command yang saya jalankan :</p>

<p>Konversi dari ogv menjadi mp4
<div><script src='https://gist.github.com/1048657.js?file=ogv-to-mp4.sh'></script>
<noscript><pre><code>ffmpeg -vcodec libx264 -vpre lossless_medium -i file-input.ogv file-output.mp4</code></pre></noscript></div>
</p>

<p>Konversi dari ogv menjadi webm
<div><script src='https://gist.github.com/1048657.js?file=ogv-to-webm.sh'></script>
<noscript><pre><code>ffmpeg -pass 1 -passlogfile file-input.ogv -threads 16  -keyint_min 0 -g 250 -skip_threshold 0 -qmin 1 -qmax 51 -i file-input.ogv -vcodec libvpx -b 614400 -s 640x480 -aspect 4:3 -an -y tmp.webm

rm tmp.webm

ffmpeg -pass 2 -passlogfile file-input.ogv -threads 16  -keyint_min 0 -g 250 -skip_threshold 0 -qmin 1 -qmax 51 -i file-input.ogv -vcodec libvpx -b 614400 -s 640x480 -aspect 4:3 -an -y file-output.webm
</code></pre></noscript></div>
</p>

<p>Command di atas mungkin berbeda bila file asli kita formatnya adalah mpeg seperti yang dihasilkan oleh XVidcap.</p>

<p>Membuat poster
<div><script src='https://gist.github.com/1048657.js?file=create-poster.sh'></script>
<noscript><pre><code>ffmpeg -r 1 -t 1 -vframes 1 -i input-file.mp4  output-file.png</code></pre></noscript></div>
</p>

<h2>Upload</h2>

<p>Setelah semua file(ogv,mp4,png) terkumpul di satu folder, kita upload menggunakan rsync
<div><script src='https://gist.github.com/1048657.js?file=upload-to-server.sh'></script>
<noscript><pre><code>rsync -avz /path/to/video/folder user@example.com:/home/user/public_html/videos</code></pre></noscript></div>
</p>

<h2>Tampilkan di blog</h2>

<p>Terakhir, kita ingin menayangkan video tersebut di blog kita. Karena saya menggunakan wordpress, saya pasang <a href="http://open.pages.kevinwiliarty.com/external-video-for-everybody/">plugin External Video for Everybody</a>. Plugin ini menampilkan video player di browser kita, supaya orang lain bisa langsung klik tombol play. Di belakang layar, plugin ini mendeteksi apakah browser kita mendukung HTML 5 atau tidak. Kalau iya, maka video akan ditampilkan dengan tag khusus &lt;video&gt;. Bila tidak, maka flash player akan digunakan. Flash player ini tidak disediakan oleh plugin ini. Kita perlu memilih dan mendownload sendiri dari sekian banyak flash player yang tersedia, contohnya <a href="http://www.longtailvideo.com/players/jw-flv-player/">JW Player</a></p>

<p>Sebagai penutup, bisa melihat <a href="http://linuxandfriends.com/2009/07/13/how-to-create-a-screencast-in-ubuntu-linux/">tutorial ini</a> yang saya gunakan sebagai titik awal eksplorasi saya.</p>
]]></content>
  </entry>
  
</feed>
