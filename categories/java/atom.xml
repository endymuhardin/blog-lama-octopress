<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | Living life and make it better]]></title>
  <link href="http://software.endy.muhardin.com/categories/java/atom.xml" rel="self"/>
  <link href="http://software.endy.muhardin.com/"/>
  <updated>2014-01-03T10:54:47+07:00</updated>
  <id>http://software.endy.muhardin.com/</id>
  <author>
    <name><![CDATA[Endy Muhardin]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Prasyarat Integrasi Aplikasi]]></title>
    <link href="http://software.endy.muhardin.com/java/prasyarat-integrasi-aplikasi/"/>
    <updated>2014-01-03T10:43:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/prasyarat-integrasi-aplikasi</id>
    <content type="html"><![CDATA[<p>Posting kali ini jawaban dari pertanyaan yang masuk melalui email:</p>

<blockquote><p>Saya membaca tulisan anda <a href="http://software.endy.muhardin.com/java/integrasi-aplikasi/">di sini</a>
Cukup menarik, dan saya ingin bertanya jika berkenan, sehubungan dengan payment gateway.</p>

<p>Apakah kita bisa mengimplementasikan sendiri ISO-8583 pada aplikasi kita untuk terhubung ke bank di Indonesia ?
Misal kita bisa cek saldo tabungan melalui aplikasi kita sendiri ?</p>

<p>Atas sharing pengetahuannya saya ucapkan terima kasih.</p></blockquote>

<p>Berikut jawaban saya</p>

<!--more-->


<p>Untuk bisa connect ke aplikasi lain (misalnya aplikasi bank), ada beberapa prasyarat yang harus dipenuhi <strong>secara berurutan</strong>:</p>

<ol>
<li>aksesnya harus dibuka (ip address, port, firewall, dsb). Biasanya ini melibatkan faktor non-teknis seperti deal bisnis, non-disclosure agreement, perjanjian berkekuatan hukum, dan sejenisnya.</li>
<li>protokol komunikasinya harus diketahui (http, iso8583, dsb)</li>
<li>kita harus bikin aplikasi yg bisa berkomunikasi dengan aplikasi yang dituju menggunakan protokol yang ditentukan di poin #2. Jadi harus tahu fitur apa saja yang tersedia, bagaimana memanggilnya, apa inputnya, bagaimana format outputnya, apa tipe datanya, dsb.</li>
</ol>


<p>Kalau tiga faktor di atas terpenuhi, jangankan cuma aplikasi bank di Indonesia, aplikasinya Snowden juga bisa kita akses ;)</p>

<p>Oh, sebelum artikel ini diakhiri, saya harus bikin disclaimer dulu.</p>

<blockquote><p>Saya tidak bertanggung jawab kalau ada <em>smarta$$</em> yang setelah baca artikel ini lalu nekat mengakses aplikasi orang lain hanya bermodalkan #2 dan #3 tanpa punya #1.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meningkatkan performance Android Emulator]]></title>
    <link href="http://software.endy.muhardin.com/java/meningkatkan-performance-android-emulator/"/>
    <updated>2013-12-10T17:39:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/meningkatkan-performance-android-emulator</id>
    <content type="html"><![CDATA[<p>Setelah kemarin kita mempersiapkan persenjataan untuk coding Android, langkah selanjutnya tentu saja membuat aplikasi <code>Hello World</code> dan kemudian mencoba menjalankannya. Ada dua pilihan cara menjalankan aplikasi Android, yaitu langsung di <em>device</em> atau menggunakan emulator.</p>

<p>Sayangnya, secara default emulator Android sangat lemot. Sedangkan kecepatan kita dalam membangun aplikasi sangat ditentukan oleh kecepatan kita melakukan siklus <em>edit-test-fix</em>. Kalau langkah <em>test</em> butuh waktu lama, dengan sendirinya proses development kita juga akan butuh waktu lama.</p>

<p>Untungnya ada teknik yang tersedia untuk meningkatkan kecepatan emulator Android, yaitu dengan <a href="http://software.intel.com/en-us/articles/speeding-up-the-android-emulator-on-intel-architecture">menggunakan emulator berbasis Intel platform</a>. Kita akan bahas cara-caranya di artikel ini.</p>

<p><img src="http://lh5.googleusercontent.com/-ynU8SU2Efd0/Uqa45WE4K_I/AAAAAAAAC7w/umEdkuO7wqA/w467-h623-no/20131210_134625.jpg"></p>

<!--more-->


<p>Prinsip dasarnya adalah, kita memanfaatkan fitur virtualisasi yang sudah tersedia di prosesor Intel generasi saat ini. Dengan fitur ini, emulator Android bisa berjalan dengan lebih cepat karena ada dukungan di prosesor. Tentunya terlebih dulu kita harus melakukan pengecekan apakah prosesor di komputer kita sudah mendukung fitur ini atau belum.</p>

<p>Di Windows dan Mac, fitur ini diaktifkan dengan driver khusus dari Intel yang disebut dengan Intel® Hardware Accelerated Execution Manager (Intel® HAXM). Sedangkan pada Linux, fitur ini tersedia dalam aplikasi virtualisasi KVM.</p>

<p>Mari kita bahas cara pengecekannya satu persatu dengan Linux maupun dengan Windows.</p>

<h2>Instalasi di Linux</h2>

<p>Berikut adalah langkah-langkahnya:</p>

<ol>
<li>Verifikasi apakah prosesor kita sudah mendukung</li>
<li>Instalasi KVM</li>
<li>Membuat emulator Intel di Android Virtual Device (AVD) Manager</li>
</ol>


<h3>Verifikasi Dukungan Prosesor</h3>

<p>Di Ubuntu, kita bisa menjalankan perintah berikut di terminal.</p>

<p><code>
egrep -c '(vmx|svm)' /proc/cpuinfo
</code></p>

<p>Kalau outputnya <code>0</code>, berarti komputer kita tidak support. Angka <code>1</code> atau lebih menunjukkan bahwa komputer kita mendukung KVM.</p>

<h3>Instalasi KVM</h3>

<p>Berikut perintahnya</p>

<p><code>
sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils
</code></p>

<p>Setelah selesai, kita harus logout dan login lagi, karena Ubuntu menambahkan user kita ke grup <code>libvirtd</code>. Penambahan ke grup ini baru dibaca pada saat kita login.</p>

<p>Kita bisa tes kesuksesan proses instalasi, jalankan perintah berikut:</p>

<p><code>
virsh -c qemu:///system list
</code></p>

<p>Bila sukses, outputnya seperti ini</p>

<p>```</p>

<h2> Id Name                 State</h2>

<p>```</p>

<p>Bila gagal, outputnya seperti ini</p>

<p><code>
libvir: Remote error : Permission denied
error: failed to connect to the hypervisor
</code></p>

<p>Selanjutnya, kita tinggal membuat Android Virtual Device (AVD) yang menggunakan platform Intel. Langkah ini akan kita bahas setelah penjelasan tentang cara instalasi Intel® HAXM di Windows.</p>

<h2>Instalasi di Windows</h2>

<p>Instalasi Intel® HAXM dilakukan melalui Android SDK Manager. Opsinya ada di folder Extra di paling bawah.
Jangan lupa instal juga emulator Intel sekaligus.</p>

<p><img src="http://lh4.googleusercontent.com/-ZitwHacTB50/UqcZWbt1alI/AAAAAAAAC8Y/T_rChtMx4m0/w746-h576-no/haxm01.png"></p>

<p>Instalasi melalui Android SDK Manager ini ternyata hanya mengunduh Intel® HAXM saja. Kita tetap harus menginstalnya sendiri. Cari filenya dalam folder <code>extras</code> dalam Android SDK.</p>

<p><img src="http://lh6.googleusercontent.com/-vyyFTq3bx_4/UqcZVfev3QI/AAAAAAAAC8Q/fAcHpy2KJMo/w233-h122-no/haxm02.png"></p>

<p>Jalankan saja installer seperti biasa. Klik Next sampai selesai.</p>

<h2>Membuat Emulator Intel</h2>

<p>Selanjutnya, kita tinggal membuat AVD seperti biasa. Pastikan kita pilih opsi platform Intel.</p>

<p><img src="http://lh3.googleusercontent.com/-phoDzK--s64/Uqcbh-dQWzI/AAAAAAAAC8s/2WWFtnFY1TE/w572-h623-no/Edit+Android+Virtual+Device+%2528AVD%2529+_001.png"></p>

<p>Jangan lupa untuk mencentang juga opsi <code>Use Host GPU</code> untuk mengalihkan beban pemrosesan tampilan dari emulator ke komputer kita.</p>

<p>Selamat mencoba, seharusnya sekarang emulator bisa dijalankan dengan lebih cepat. Oh iya, ada sedikit keterbatasan. Pada saat artikel ini ditulis, Intel belum merilis emulator untuk Android versi terbaru (KitKat / API level 19). Jadi kita terpaksa coding menggunakan API level 18.</p>

<p>Semoga bermanfaat</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Persiapan Coding Java]]></title>
    <link href="http://software.endy.muhardin.com/java/persiapan-coding-java/"/>
    <updated>2013-11-27T11:10:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/persiapan-coding-java</id>
    <content type="html"><![CDATA[<p>Sebelum kita mulai coding, langkah pertama tentulah menginstal persenjataan. Perlengkapan minimal yang dibutuhkan untuk coding Java sebenarnya cuma:</p>

<ul>
<li>Java SDK</li>
<li>Text editor. Tidak perlu yang canggih, asal ada warnanya seperti Gedit, Notepad++, dan sejenisnya</li>
</ul>


<p>Kalau sudah pakai library tambahan --seperti driver database, framework, dan lainnya-- maka perlu menggunakan <a href="http://maven.apache.org">Maven</a> supaya mudah mengelolanya. Berikut adalah langkah-langkah persiapannya.</p>

<!--more-->


<h2>Langkah Instalasi</h2>

<p>Secara garis besar, langkah-langkahnya sebagai berikut:</p>

<ol>
<li>Install Java SDK</li>
<li>Extract Maven</li>
<li>Setting <em>Environment Variable</em></li>
</ol>


<p>Ada 2 <em>environment variable</em> yang harus dibuat karena belum ada, yaitu:</p>

<ul>
<li>JAVA_HOME : lokasi instalasi Java SDK</li>
<li>M2_HOME : lokasi extract Maven</li>
</ul>


<p>Dan satu yang harus diedit, yaitu variabel <code>PATH</code>. Tambahkan:</p>

<ul>
<li>JAVA_HOME/bin : lokasi compiler java</li>
<li>M2_HOME/bin : lokasi perintah <code>mvn</code></li>
</ul>


<p>Berikut caranya di Ubuntu dan Windows 8.</p>

<h2>Instalasi di Ubuntu</h2>

<p>Di Ubuntu tidak sulit, tinggal install saja paket <code>openjdk-7-jdk</code>. Terserah mau pakai GUI atau command line. Setelah itu kita extract <a href="http://maven.apache.org">Maven</a> di folder manapun yang kita suka. Biasanya saya extract di folder <code>/opt</code>.</p>

<p>Untuk menambahkan environment variable kita edit file <code>/etc/environment</code> sehingga isinya menjadi seperti ini</p>

<p><code>
JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
M2_HOME=/opt/apache-maven-3.1.1
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/apache-maven-3.1.1/bin"
</code></p>

<p>Setelah <code>/etc/environment</code> diedit, restart komputer supaya isi file tersebut dibaca semua aplikasi.</p>

<p>Mudah bukan? Bandingkan panjang penjelasannya dengan Windows di bawah ini ;p</p>

<h2>Instalasi di Windows</h2>

<h3>Instalasi JDK dan Maven</h3>

<p>Java SDK bisa diunduh <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">di sini</a>. Ambil yang <code>JDK</code>, bukan <code>Server JRE</code> ataupun <code>JRE</code>. Setelah terunduh, jalankan installernya, klik Next-next sampai selesai.</p>

<p>Maven bisa diunduh di <a href="http://maven.apache.org">websitenya</a>. Setelah terunduh, extract ke folder manapun. Biasanya saya taruh di folder Program Files</p>

<p><img src="http://lh4.googleusercontent.com/-88rrGGuOgjU/UpVtUVWgtII/AAAAAAAACeU/6uGPetDKkT0/s600/01.+Folder+Program+Files.png"></p>

<p><a name="environment-variable-windows"></a></p>

<h3>Setting Environment Variable</h3>

<p>Selanjutnya sama, kita harus tambahkan variabel <code>JAVA_HOME</code> dan <code>M2_HOME</code>, kemudian edit variabel <code>PATH</code>. Pertama, klik kanan My Computer di Windows Explorer.</p>

<p><img src="http://lh4.googleusercontent.com/-8Cih2iGl_pQ/UpVtUzzuPFI/AAAAAAAACeM/aPAT_hokw-Q/s600/03.+My+Computer+-+Properties.png"></p>

<p>Kemudian tekan Properties. Muncul layar System Information</p>

<p><img src="http://lh5.googleusercontent.com/-Sx6WUwPghwI/UpVtXZKBDhI/AAAAAAAACek/9mq4DYMJ2HQ/s600/04.+System+Properties.png"></p>

<p>Klik Advanced System Setting untuk memunculkan System Properties</p>

<p><img src="http://lh3.googleusercontent.com/-BsUFuPg6rXI/UpVtVzN8ndI/AAAAAAAACeY/WzJtJDNMDEM/s600/04.+System+Properties+-+Environment+Variables.png"></p>

<p>Tekan tombol Environment Variables. Setelah muncul layarnya, tekan tombol <code>New</code> di kotak yang bawah (<code>System Variables</code>). Kemudian isi nama variable <code>JAVA_HOME</code> seperti ini</p>

<p><img src="http://lh3.googleusercontent.com/-ErYIcSxokVo/UpVtXlKvfFI/AAAAAAAACes/cf3WGL5toyc/s600/05.+JAVA_HOME.png"></p>

<p>Nilai <code>value</code> bisa dicopy-paste dari Windows Explorer. Pastikan dia menunjuk ke lokasi instalasi Java SDK</p>

<p><img src="http://lh6.googleusercontent.com/-5RRmCmNhnQ4/UpVtU7VKGBI/AAAAAAAACeE/KVwPyHsp3a0/s600/02.+Folder+Instalasi+Java.png"></p>

<p>Lakukan hal yang sama untuk variabel <code>M2_HOME</code></p>

<p><img src="http://lh6.googleusercontent.com/-ikCikrAAF9M/UpVtXuMUf5I/AAAAAAAACe0/N-Qx-fTacBc/s400/06.+M2_HOME.png"></p>

<p>Cari variabel bernama <code>Path</code>, kemudian Edit</p>

<p><img src="http://lh4.googleusercontent.com/-JNctbwhxp7I/UpVtYZRQuVI/AAAAAAAACfE/y852SKFSYXM/s400/08.+PATH.png"></p>

<p>Isinya adalah sebagai berikut</p>

<p><code>
whatever-isi-path-yang-lama;%JAVA_HOME%\bin;%M2_HOME%\bin
</code></p>

<p>Perhatikan bahwa variabel PATH berisi banyak nilai, di Windows masing-masingnya dipisahkan oleh tanda <code>;</code>. Sedangkan di Linux, dipisahkan oleh tanda <code>:</code></p>

<p>Klik OK untuk menutup semua dialog. Setelah itu kita test. Buka command prompt baru. Kalau sebelumnya sudah membuka command prompt, harus ditutup dulu dan buka yang baru. Konfigurasi yang benar hasilnya seperti ini</p>

<p><img src="http://lh3.googleusercontent.com/-t4G5eQTWL4I/UpVtZPYbJ5I/AAAAAAAACfI/LLj_LzB9H2s/s600/09.+Test+JDK+dan+Maven.png"></p>

<p>Kalau tidak seperti itu, periksa lagi isi <code>JAVA_HOME</code>, <code>M2_HOME</code>, dan <code>PATH</code>.</p>

<p>Selamat coding.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kumpulan Tutorial Spring Framework]]></title>
    <link href="http://software.endy.muhardin.com/java/kumpulan-tutorial-spring-framework/"/>
    <updated>2013-11-25T11:40:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/kumpulan-tutorial-spring-framework</id>
    <content type="html"><![CDATA[<p>Seringkali di milis dan forum banyak yang menanyakan tentang tutorial <a href="http://projects.spring.io/spring-framework/">Spring Framework</a>. Sebetulnya di blog ini banyak, tapi repot juga kalau harus cari-cari di arsip. Jadi, saya buatkan indeks seluruh artikel tentang Spring Framework dalam blog ini. Selamat menikmati :D</p>

<!--more-->


<ol>
<li><p>Fundamental</p>

<ul>
<li><a href="http://software.endy.muhardin.com/java/intro-framework/">Alasan menggunakan framework</a></li>
<li><a href="http://software.endy.muhardin.com/java/memahami-dependency-injection/">Konsep Inversion of Control</a></li>
</ul>
</li>
<li><p>Konfigurasi Spring Framework</p>

<ul>
<li><a href="http://software.endy.muhardin.com/java/struktur-aplikasi-java-dengan-spring-dan-maven/">Struktur folder project</a></li>
<li><a href="http://software.endy.muhardin.com/java/log4j-spring-mvc/">Konfigurasi Logging</a></li>
<li><a href="http://software.endy.muhardin.com/java/staged-deployment/">Konfigurasi Deployment</a></li>
</ul>
</li>
<li><p>Akses Database</p>

<ul>
<li><a href="http://software.endy.muhardin.com/java/konfigurasi-koneksi-database-dengan-spring/">Koneksi database</a></li>
<li><a href="http://software.endy.muhardin.com/java/insert-update-delete-dengan-spring-jdbc/">Insert Update Delete</a></li>
<li><a href="http://software.endy.muhardin.com/java/query-dengan-spring-jdbc/">Query</a></li>
<li><a href="http://software.endy.muhardin.com/java/mengetes-akses-database/">Testing Kode Akses Database</a></li>
</ul>
</li>
<li><p>Aplikasi Web dengan Spring MVC</p>

<ul>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-1/">Membuat halaman web dinamis</a></li>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-2/">Membuat form input</a></li>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-3/">Membuat template aplikasi</a></li>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-4/">Upload File</a></li>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-5/">Session Management</a></li>
<li><a href="http://software.endy.muhardin.com/java/aplikasi-web-spring25-6/">Internationalization (i18n) dan Localization (l10n)</a></li>
</ul>
</li>
<li><p>Integrasi Aplikasi</p>

<ul>
<li><a href="http://software.endy.muhardin.com/java/integrasi-aplikasi/">Konsep Integrasi Aplikasi</a></li>
<li><a href="http://software.endy.muhardin.com/java/remoting-dengan-spring/">Remoting : Menyediakan akses dan mengakses aplikasi dari aplikasi lain</a></li>
<li><a href="http://software.endy.muhardin.com/java/integrasi-pusat-cabang-1/">Studi Kasus Integrasi Aplikasi</a></li>
<li><a href="http://software.endy.muhardin.com/java/integrasi-pusat-cabang-2/">Integrasi Aplikasi melalui Gmail</a></li>
<li><a href="http://software.endy.muhardin.com/java/integrasi-pusat-cabang-3/">Messaging dan Routing</a></li>
<li><a href="http://software.endy.muhardin.com/java/spring-httpinvoker-sun-jre6-httpserver/">Menjalankan HTTP Server dengan Spring</a></li>
</ul>
</li>
</ol>


<p>Kalau pusing membaca, bisa nonton <a href="https://www.youtube.com/playlist?list=PL9oC_cq7OYbxOX-SxNPsi4r17GOVyHYJI">videonya di Youtube</a>. Source code yang dibahas dalam video bisa diambil <a href="https://github.com/endymuhardin/belajar-spring">di sini</a> dan <a href="https://github.com/endymuhardin/training-2013-01">di sini</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tugas Kuliah Pemrograman 1]]></title>
    <link href="http://software.endy.muhardin.com/java/tugas-kuliah-pemrograman-1/"/>
    <updated>2013-11-21T19:54:00+07:00</updated>
    <id>http://software.endy.muhardin.com/java/tugas-kuliah-pemrograman-1</id>
    <content type="html"><![CDATA[<p>Pada posting sebelumnya, kita sudah membahas:</p>

<ul>
<li><a href="http://software.endy.muhardin.com/life/otodidak/">bagaimana cara belajar secara otodidak</a></li>
<li><a href="http://software.endy.muhardin.com/life/lan-na-zha/">pentingnya menguasai konsep dasar / fundamental dari segala sesuatu</a></li>
<li>pentingnya latihan <a href="http://software.endy.muhardin.com/life/rtfm/">membaca dokumentasi</a>, <a href="http://software.endy.muhardin.com/life/problem-solving/">menyelesaikan masalah</a>, dan <a href="http://software.endy.muhardin.com/aplikasi/teknik-menggunakan-google/">mencari solusi</a></li>
</ul>


<blockquote><p>Lalu bagaimana kalau kita baru menguasai dasar-dasar Java? Bagaimana latihannya?</p></blockquote>

<p>Nah, sebetulnya cuma masalah kreativitas saja. Banyak aplikasi yang bisa dibuat dengan teknik minimalis. Sebagai contoh, coba simak tugas kuliah yang saya berikan untuk mata kuliah Pemrograman 1 di Universitas Pancasila. Untuk bisa menyelesaikan tugas ini, skill yang dibutuhkan hanyalah:</p>

<ul>
<li>variabel dan tipe data</li>
<li>looping (for,while) dan percabangan (if-else)</li>
<li>menggunakan class <code>java.lang.String</code></li>
<li>baca/tulis file</li>
</ul>


<p>Referensi yang dibutuhkan hanyalah:</p>

<ul>
<li><a href="http://docs.oracle.com/javase/tutorial/index.html">Tutorial resmi dari Oracle</a> atau <a href="http://project-template.googlecode.com/files/Java%20Desktop%20-%20Ifnu%20Bima.pdf">buku Java Desktop karangan Ifnu Bima</a></li>
<li><a href="http://docs.oracle.com/javase/7/docs/api/index.html">Dokumentasi API Java (JavaDocs)</a></li>
</ul>


<p>Studi kasus pada tugas ini merupakan aplikasi yang benar-benar digunakan di dunia nyata.</p>

<p>Selamat mencoba.</p>

<blockquote><p>Update : tugas ini sudah saya kerjakan. Videonya bisa <a href="http://www.youtube.com/playlist?list=PL9oC_cq7OYbx58s-eCBwP-5NxKnG8SHIr">dilihat di Youtube</a> dan source codenya bisa <a href="https://github.com/endymuhardin/pemrograman-2-2013/tree/master/sample-code/aplikasi-payroll">dilihat di Github</a>.</p></blockquote>

<!--more-->


<h1>Deskripsi Aplikasi</h1>

<p>Aplikasi ini akan memproses perhitungan take home pay pegawai tiap bulannya. Tidak digunakan antarmuka pengguna (user interface) karena aplikasi bersifat <code>batch</code>, yaitu berjalan otomatis pada waktu yang ditentukan tanpa membutuhkan intervensi manusia. Input aplikasi berupa file text, dan outputnya juga berupa file text.</p>

<p><img src="http://lh5.googleusercontent.com/-zREpwzUHZVs/Uo4B8sUpjdI/AAAAAAAACT4/3HgNUTbbu1s/w909-h314-no/tugas-kuliah.jpg"></p>

<p>Pada pemakaian sebenarnya, data tarif gaji pegawai bisa diambil dari database. Data absensi diambil dari mesin fingerprint. Hasil perhitungan take home pay akan diupload ke bank untuk proses payroll otomatis.</p>

<h1>Proses Bisnis</h1>

<h2>Input dan Output</h2>

<p>Aplikasi menerima input berupa file text sebagai berikut :</p>

<ul>
<li><code>tarif.csv</code> : berisi nomer induk, nama, tarif gaji pokok, tarif denda, tarif lembur, tarif tunjangan transport</li>
<li><code>absen-MM.csv</code> : berisi nomer induk, tanggal, jam datang, jam pulang</li>
</ul>


<p>Dari dua file input tersebut, aplikasi akan mengeluarkan file text sebagai berikut :</p>

<ul>
<li>takehome-MM.csv : berisi nomer induk, nama, gaji pokok, total denda, total lembur, total tunjangan transport, take home pay</li>
</ul>


<p><code>MM</code> adalah 2 digit bulan. Untuk bulan November, berarti <code>MM</code> akan terisi <code>11</code>.</p>

<h2>Aturan Bisnis</h2>

<ol>
<li>Hari kerja normal Senin - Jumat. Sabtu dan Minggu libur.</li>
<li>Jam kerja normal 09:00 - 17:00.</li>
<li>Bila hadir kerja pada hari normal, mendapatkan tunjangan transport harian sesuai tarif.</li>
<li>Bila datang terlambat, dikenakan denda per jam sesuai tarif denda per jam.</li>
<li>Bila pulang lebih cepat, dikenakan denda per jam sesuai tarif denda per jam.</li>
<li>Bila datang lebih cepat, tidak mendapatkan bonus.</li>
<li>Bila pulang lebih lambat dari jam normal, mendapatkan lembur sesuai tarif lembur per jam.</li>
<li>Bila masuk di hari libur, mendapatkan tunjangan transport dan bonus lembur dihitung per jam sesuai tarif.</li>
<li>Diasumsikan tidak ada hari libur di luar Sabtu-Minggu.</li>
<li>Rumus : <code>take home pay = gaji pokok - total denda + total lembur + total tunjangan transport</code></li>
</ol>


<h2>Contoh File</h2>

<h3>tarif.csv</h3>

<p><code>
no,nama,gaji,denda,lembur,transport
1001,Endy,2000,10,15,30
1002,Adi,3000,15,20,50
1003,Jimmy,3500,15,20,50
1004,Doni,3250,10,10,35
</code></p>

<h3>absen-11.csv</h3>

<p><code>
no,tanggal,datang,pulang
1001,2013-11-01,08:55,17:05
1002,2013-11-01,08:57,17:02
1003,2013-11-01,08:55,17:03
1004,2013-11-01,08:55,17:05
1001,2013-11-02,08:58,17:01
1002,2013-11-02,09:01,18:02
1003,2013-11-02,09:15,18:33
1004,2013-11-02,08:54,19:05
</code></p>

<h3>takehome-11.csv</h3>

<p><code>
no,nama,gaji,denda,lembur,transport,takehome
1001,Endy,2000,100,150,600,2650
1002,Adi,3000,200,300,1000,4100
1003,Jimmy,3500,150,200,950,4500
1004,Doni,3250,250,300,550,3850
</code></p>
]]></content>
  </entry>
  
</feed>
